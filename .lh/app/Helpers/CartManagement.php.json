{
    "sourceFile": "app/Helpers/CartManagement.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 31,
            "patches": [
                {
                    "date": 1733255545850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733255677159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         if ($existing_item !== null) {\r\n             $cart_items[$existing_item]['quantity']++;\r\n             $cart_items[$existing_item]['total_amount'] = $cart_items[$existing_item]['quantity'] * $cart_items[$existing_item]['unit_amount'];\r\n         } else {\r\n-            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'branch_id']);\r\n+            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'images', 'branch_id']);\r\n             // $productimgempty = url('storage/box.png');\r\n             if ($product->images != null) {\r\n                 $productimg = $product->images[0];\r\n             } else {\r\n@@ -40,8 +40,9 @@\n                     'product_id' => $product_id,\r\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n+                    'image' => $productimg,\r\n                     'quantity' => 1,\r\n                     'unit_amount' => $product->price,\r\n                     'total_amount' => $product->price,\r\n                     'mutation_type' => 'Sales',\r\n@@ -71,9 +72,9 @@\n         if ($existing_item !== null) {\r\n             $cart_items[$existing_item]['quantity'] = $qty;\r\n             $cart_items[$existing_item]['total_amount'] = $cart_items[$existing_item]['quantity'] * $cart_items[$existing_item]['unit_amount'];\r\n         } else {\r\n-            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'branch_id']);\r\n+            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'images', 'branch_id']);\r\n             // $productimgempty = url('storage/box.png');\r\n             if ($product->images != null) {\r\n                 $productimg = $product->images[0];\r\n             } else {\r\n@@ -85,8 +86,9 @@\n                     'product_id' => $product_id,\r\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n+                    'image' => $productimg,\r\n                     'quantity' => $qty,\r\n                     'unit_amount' => $product->price,\r\n                     'total_amount' => $product->price * $qty,\r\n                     'mutation_type' => 'Sales',\r\n"
                },
                {
                    "date": 1733257844811,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,23 +26,23 @@\n         if ($existing_item !== null) {\r\n             $cart_items[$existing_item]['quantity']++;\r\n             $cart_items[$existing_item]['total_amount'] = $cart_items[$existing_item]['quantity'] * $cart_items[$existing_item]['unit_amount'];\r\n         } else {\r\n-            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'images', 'branch_id']);\r\n+            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'branch_id']);\r\n             // $productimgempty = url('storage/box.png');\r\n-            if ($product->images != null) {\r\n-                $productimg = $product->images[0];\r\n-            } else {\r\n-                $productimg = null;\r\n-            }\r\n+            // if ($product->images != null) {\r\n+            //     $productimg = $product->images[0];\r\n+            // } else {\r\n+            //     $productimg = null;\r\n+            // }\r\n \r\n             if ($product) {\r\n                 $cart_items[] = [\r\n                     'product_id' => $product_id,\r\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n-                    'image' => $productimg,\r\n+                    // 'image' => $productimg,\r\n                     'quantity' => 1,\r\n                     'unit_amount' => $product->price,\r\n                     'total_amount' => $product->price,\r\n                     'mutation_type' => 'Sales',\r\n@@ -72,23 +72,23 @@\n         if ($existing_item !== null) {\r\n             $cart_items[$existing_item]['quantity'] = $qty;\r\n             $cart_items[$existing_item]['total_amount'] = $cart_items[$existing_item]['quantity'] * $cart_items[$existing_item]['unit_amount'];\r\n         } else {\r\n-            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'images', 'branch_id']);\r\n+            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'branch_id']);\r\n             // $productimgempty = url('storage/box.png');\r\n-            if ($product->images != null) {\r\n-                $productimg = $product->images[0];\r\n-            } else {\r\n-                $productimg = null;\r\n-            }\r\n+            // if ($product->images != null) {\r\n+            //     $productimg = $product->images[0];\r\n+            // } else {\r\n+            //     $productimg = null;\r\n+            // }\r\n \r\n             if ($product) {\r\n                 $cart_items[] = [\r\n                     'product_id' => $product_id,\r\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n-                    'image' => $productimg,\r\n+                    // 'image' => $productimg,\r\n                     'quantity' => $qty,\r\n                     'unit_amount' => $product->price,\r\n                     'total_amount' => $product->price * $qty,\r\n                     'mutation_type' => 'Sales',\r\n"
                },
                {
                    "date": 1733258120533,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,23 +26,23 @@\n         if ($existing_item !== null) {\r\n             $cart_items[$existing_item]['quantity']++;\r\n             $cart_items[$existing_item]['total_amount'] = $cart_items[$existing_item]['quantity'] * $cart_items[$existing_item]['unit_amount'];\r\n         } else {\r\n-            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'branch_id']);\r\n+            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'images', 'branch_id']);\r\n             // $productimgempty = url('storage/box.png');\r\n-            // if ($product->images != null) {\r\n-            //     $productimg = $product->images[0];\r\n-            // } else {\r\n-            //     $productimg = null;\r\n-            // }\r\n+            if ($product->images != null) {\r\n+                $productimg = $product->images[0];\r\n+            } else {\r\n+                $productimg = null;\r\n+            }\r\n \r\n             if ($product) {\r\n                 $cart_items[] = [\r\n                     'product_id' => $product_id,\r\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n-                    // 'image' => $productimg,\r\n+                    'image' => $productimg,\r\n                     'quantity' => 1,\r\n                     'unit_amount' => $product->price,\r\n                     'total_amount' => $product->price,\r\n                     'mutation_type' => 'Sales',\r\n@@ -72,23 +72,23 @@\n         if ($existing_item !== null) {\r\n             $cart_items[$existing_item]['quantity'] = $qty;\r\n             $cart_items[$existing_item]['total_amount'] = $cart_items[$existing_item]['quantity'] * $cart_items[$existing_item]['unit_amount'];\r\n         } else {\r\n-            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'branch_id']);\r\n+            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'images', 'branch_id']);\r\n             // $productimgempty = url('storage/box.png');\r\n-            // if ($product->images != null) {\r\n-            //     $productimg = $product->images[0];\r\n-            // } else {\r\n-            //     $productimg = null;\r\n-            // }\r\n+            if ($product->images != null) {\r\n+                $productimg = $product->images[0];\r\n+            } else {\r\n+                $productimg = null;\r\n+            }\r\n \r\n             if ($product) {\r\n                 $cart_items[] = [\r\n                     'product_id' => $product_id,\r\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n-                    // 'image' => $productimg,\r\n+                    'image' => $productimg,\r\n                     'quantity' => $qty,\r\n                     'unit_amount' => $product->price,\r\n                     'total_amount' => $product->price * $qty,\r\n                     'mutation_type' => 'Sales',\r\n"
                },
                {
                    "date": 1733261824924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,15 +119,15 @@\n \r\n     // add cart items to coockie\r\n     static public function addCartItemsToCookie($cart_items)\r\n     {\r\n-        Cookie::queue('cart_items', json_encode($cart_items), 60 * 24 * 30);\r\n+        Cookie::make('cart_items', json_encode($cart_items), 60 * 24 * 30);\r\n     }\r\n \r\n     // clear cart items from cookie\r\n     static public function clearCartItems()\r\n     {\r\n-        Cookie::queue(Cookie::forget('cart_items'));\r\n+        Cookie::make(Cookie::forget('cart_items'));\r\n     }\r\n \r\n     // get all cart items from cookie\r\n     static public function getCartItemsFromCookie()\r\n"
                },
                {
                    "date": 1733261906188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -125,9 +125,9 @@\n \r\n     // clear cart items from cookie\r\n     static public function clearCartItems()\r\n     {\r\n-        Cookie::make(Cookie::forget('cart_items'));\r\n+        Cookie::queue(Cookie::forget('cart_items'));\r\n     }\r\n \r\n     // get all cart items from cookie\r\n     static public function getCartItemsFromCookie()\r\n"
                },
                {
                    "date": 1733261929541,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n \r\n     // add cart items to coockie\r\n     static public function addCartItemsToCookie($cart_items)\r\n     {\r\n-        Cookie::make('cart_items', json_encode($cart_items), 60 * 24 * 30);\r\n+        Cookie::queue('cart_items', json_encode($cart_items), 60 * 24 * 30);\r\n     }\r\n \r\n     // clear cart items from cookie\r\n     static public function clearCartItems()\r\n"
                },
                {
                    "date": 1733312258661,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,12 +41,14 @@\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n                     'image' => $productimg,\r\n-                    'quantity' => 1,\r\n+                    'quantity' => $qty,\r\n                     'unit_amount' => $product->price,\r\n-                    'total_amount' => $product->price,\r\n+                    'total_amount' => $product->price * $qty,\r\n                     'mutation_type' => 'Sales',\r\n+                    'created_by' => auth()->user()->id,\r\n+                    'updated_by' => auth()->user()->id,\r\n                     'branch_id' => $product->branch_id\r\n                 ];\r\n             }\r\n         }\r\n@@ -91,8 +93,10 @@\n                     'quantity' => $qty,\r\n                     'unit_amount' => $product->price,\r\n                     'total_amount' => $product->price * $qty,\r\n                     'mutation_type' => 'Sales',\r\n+                    'created_by' => auth()->user()->id,\r\n+                    'updated_by' => auth()->user()->id,\r\n                     'branch_id' => $product->branch_id\r\n                 ];\r\n             }\r\n         }\r\n"
                },
                {
                    "date": 1733312306330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,11 +41,11 @@\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n                     'image' => $productimg,\r\n-                    'quantity' => $qty,\r\n+                    'quantity' => 1,\r\n                     'unit_amount' => $product->price,\r\n-                    'total_amount' => $product->price * $qty,\r\n+                    'total_amount' => $product->price ,\r\n                     'mutation_type' => 'Sales',\r\n                     'created_by' => auth()->user()->id,\r\n                     'updated_by' => auth()->user()->id,\r\n                     'branch_id' => $product->branch_id\r\n"
                },
                {
                    "date": 1733312465338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n <?php\r\n \r\n namespace App\\Helpers;\r\n \r\n+use App\\Models\\Cart;\r\n use App\\Models\\Product;\r\n use Illuminate\\Support\\Facades\\Cookie;\r\n use Illuminate\\Support\\Facades\\Storage;\r\n \r\n@@ -123,21 +124,21 @@\n \r\n     // add cart items to coockie\r\n     static public function addCartItemsToCookie($cart_items)\r\n     {\r\n-        Cookie::queue('cart_items', json_encode($cart_items), 60 * 24 * 30);\r\n+        Cart::queue(Cart::create($cart_items));\r\n     }\r\n \r\n     // clear cart items from cookie\r\n     static public function clearCartItems()\r\n     {\r\n-        Cookie::queue(Cookie::forget('cart_items'));\r\n+        Cart::queue(Cart::forget('cart_items'));\r\n     }\r\n \r\n     // get all cart items from cookie\r\n     static public function getCartItemsFromCookie()\r\n     {\r\n-        $cart_items = json_decode(Cookie::get('cart_items'), true);\r\n+        $cart_items = Cart::get('cart_items');\r\n         if (!$cart_items) {\r\n             $cart_items = [];\r\n         }\r\n         return $cart_items;\r\n"
                },
                {
                    "date": 1733312745152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n \r\n     // add item to cart\r\n     static public function addItemToCart($product_id)\r\n     {\r\n-        $cart_items = self::getCartItemsFromCookie();\r\n+        $cart_items = self::getCartItemsFromCart();\r\n \r\n         $existing_item = null;\r\n \r\n         foreach ($cart_items as $key => $item) {\r\n@@ -60,9 +60,9 @@\n \r\n     // add item to cart with qty\r\n     static public function addItemToCartWithQty($product_id, $qty)\r\n     {\r\n-        $cart_items = self::getCartItemsFromCookie();\r\n+        $cart_items = self::getCartItemsFromCart();\r\n \r\n         $existing_item = null;\r\n \r\n         foreach ($cart_items as $key => $item) {\r\n@@ -108,9 +108,9 @@\n \r\n     // remove item from cart\r\n     static public function removeCartItem($product_id)\r\n     {\r\n-        $cart_items = self::getCartItemsFromCookie();\r\n+        $cart_items = self::getCartItemsFromCart();\r\n \r\n         foreach ($cart_items as $key => $item) {\r\n             if ($item['product_id'] == $product_id) {\r\n                 unset($cart_items[$key]);\r\n@@ -127,18 +127,18 @@\n     {\r\n         Cart::queue(Cart::create($cart_items));\r\n     }\r\n \r\n-    // clear cart items from cookie\r\n+    // clear cart items from cart\r\n     static public function clearCartItems()\r\n     {\r\n         Cart::queue(Cart::forget('cart_items'));\r\n     }\r\n \r\n-    // get all cart items from cookie\r\n-    static public function getCartItemsFromCookie()\r\n+    // get all cart items from cart\r\n+    static public function getCartItemsFromCart()\r\n     {\r\n-        $cart_items = Cart::get('cart_items');\r\n+        $cart_items = Cart::query();\r\n         if (!$cart_items) {\r\n             $cart_items = [];\r\n         }\r\n         return $cart_items;\r\n@@ -146,9 +146,9 @@\n \r\n     // increment item quantity\r\n     static public function incrementQuantityToCartItem($product_id)\r\n     {\r\n-        $cart_items = self::getCartItemsFromCookie();\r\n+        $cart_items = self::getCartItemsFromCart();\r\n \r\n         foreach ($cart_items as $key => $item) {\r\n             if ($item['product_id'] == $product_id) {\r\n                 $cart_items[$key]['quantity']++;\r\n@@ -161,9 +161,9 @@\n \r\n     // decrement item quantity\r\n     static public function decrementQuantityToCartItem($product_id)\r\n     {\r\n-        $cart_items = self::getCartItemsFromCookie();\r\n+        $cart_items = self::getCartItemsFromCart();\r\n \r\n         foreach ($cart_items as $key => $item) {\r\n             if ($item['product_id'] == $product_id) {\r\n                 if ($cart_items[$key]['quantity'] > 1) {\r\n@@ -178,9 +178,9 @@\n \r\n     // typing item quantity\r\n     // static public function typingQuantityToCartItem($product_id, $quantity)\r\n     // {\r\n-    //     $cart_items = self::getCartItemsFromCookie();\r\n+    //     $cart_items = self::getCartItemsFromCart();\r\n \r\n     //     foreach ($cart_items as $key => $item) {\r\n     //         if ($item['product_id'] == $product_id) {\r\n     //             $qty = $cart_items[$key]['quantity'];\r\n"
                },
                {
                    "date": 1733312925699,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,7 +197,8 @@\n \r\n     // calculate grand total\r\n     static public function calculateGrandTotal($items)\r\n     {\r\n-        return array_sum(array_column($items, 'total_amount'));\r\n+        $items = Cart::query()->sum('total_amount');\r\n+        return ($items, 'items');\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1733312981918,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,8 @@\n \r\n     // calculate grand total\r\n     static public function calculateGrandTotal($items)\r\n     {\r\n-        $items = Cart::query()->sum('total_amount');\r\n-        return ($items, 'items');\r\n+        $items = Cart::query()->value('total_amount')->get();\r\n+        return array_sum(($items, 'items'));\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1733312990638,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,8 @@\n \r\n     // calculate grand total\r\n     static public function calculateGrandTotal($items)\r\n     {\r\n-        $items = Cart::query()->value('total_amount')->get();\r\n+        $items = Cart::query()->value('total_amount');\r\n         return array_sum(($items, 'items'));\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1733313011795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,8 @@\n \r\n     // calculate grand total\r\n     static public function calculateGrandTotal($items)\r\n     {\r\n-        $items = Cart::query()->value('total_amount');\r\n-        return array_sum(($items, 'items'));\r\n+        $itemssum = Cart::query()->sum('total_amount');\r\n+        return array_sum(($items, 'itemssum'));\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1733313048274,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,8 +197,7 @@\n \r\n     // calculate grand total\r\n     static public function calculateGrandTotal($items)\r\n     {\r\n-        $itemssum = Cart::query()->sum('total_amount');\r\n-        return array_sum(($items, 'itemssum'));\r\n+        return ($items, Cart::query()->sum('total_amount'));\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1733313053507,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n                     'slug' => $product->slug,\r\n                     'image' => $productimg,\r\n                     'quantity' => 1,\r\n                     'unit_amount' => $product->price,\r\n-                    'total_amount' => $product->price ,\r\n+                    'total_amount' => $product->price,\r\n                     'mutation_type' => 'Sales',\r\n                     'created_by' => auth()->user()->id,\r\n                     'updated_by' => auth()->user()->id,\r\n                     'branch_id' => $product->branch_id\r\n"
                },
                {
                    "date": 1733313216524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,7 +197,7 @@\n \r\n     // calculate grand total\r\n     static public function calculateGrandTotal($items)\r\n     {\r\n-        return ($items, Cart::query()->sum('total_amount'));\r\n+        return (Cart::query()->sum('total_amount'));\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1733313250755,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -197,7 +197,8 @@\n \r\n     // calculate grand total\r\n     static public function calculateGrandTotal($items)\r\n     {\r\n-        return (Cart::query()->sum('total_amount'));\r\n+        $items = Cart::query()->sum('total_amount');\r\n+        return ($items);\r\n     }\r\n }\r\n"
                },
                {
                    "date": 1733313301076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n     static public function getCartItemsFromCart()\r\n     {\r\n         $cart_items = Cart::query();\r\n         if (!$cart_items) {\r\n-            $cart_items = [];\r\n+            $cart_items = 'kosong';\r\n         }\r\n         return $cart_items;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1733313311163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -136,9 +136,9 @@\n \r\n     // get all cart items from cart\r\n     static public function getCartItemsFromCart()\r\n     {\r\n-        $cart_items = Cart::query();\r\n+        $cart_items = Cart::all();\r\n         if (!$cart_items) {\r\n             $cart_items = 'kosong';\r\n         }\r\n         return $cart_items;\r\n"
                },
                {
                    "date": 1733313327323,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -138,9 +138,9 @@\n     static public function getCartItemsFromCart()\r\n     {\r\n         $cart_items = Cart::all();\r\n         if (!$cart_items) {\r\n-            $cart_items = 'kosong';\r\n+            $cart_items = [];\r\n         }\r\n         return $cart_items;\r\n     }\r\n \r\n"
                },
                {
                    "date": 1733313449604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n \r\n     // add cart items to coockie\r\n     static public function addCartItemsToCookie($cart_items)\r\n     {\r\n-        Cart::queue(Cart::create($cart_items));\r\n+        Cart::create($cart_items);\r\n     }\r\n \r\n     // clear cart items from cart\r\n     static public function clearCartItems()\r\n"
                },
                {
                    "date": 1733313488260,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -124,9 +124,9 @@\n \r\n     // add cart items to coockie\r\n     static public function addCartItemsToCookie($cart_items)\r\n     {\r\n-        Cart::create($cart_items);\r\n+        Cart::queue(Cart::create($cart_items[]));\r\n     }\r\n \r\n     // clear cart items from cart\r\n     static public function clearCartItems()\r\n"
                },
                {
                    "date": 1733313542691,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n                 $productimg = null;\r\n             }\r\n \r\n             if ($product) {\r\n-                $cart_items[] = [\r\n+                $cart_items = [\r\n                     'product_id' => $product_id,\r\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n@@ -84,9 +84,9 @@\n                 $productimg = null;\r\n             }\r\n \r\n             if ($product) {\r\n-                $cart_items[] = [\r\n+                $cart_items = [\r\n                     'product_id' => $product_id,\r\n                     'name' => $product->name,\r\n                     'variant' => $product->variant,\r\n                     'slug' => $product->slug,\r\n@@ -124,9 +124,9 @@\n \r\n     // add cart items to coockie\r\n     static public function addCartItemsToCookie($cart_items)\r\n     {\r\n-        Cart::queue(Cart::create($cart_items[]));\r\n+        Cart::create($cart_items);\r\n     }\r\n \r\n     // clear cart items from cart\r\n     static public function clearCartItems()\r\n"
                },
                {
                    "date": 1733313621266,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n             // $productimgempty = url('storage/box.png');\r\n             if ($product->images != null) {\r\n                 $productimg = $product->images[0];\r\n             } else {\r\n-                $productimg = null;\r\n+                $productimg = '';\r\n             }\r\n \r\n             if ($product) {\r\n                 $cart_items = [\r\n@@ -80,9 +80,9 @@\n             // $productimgempty = url('storage/box.png');\r\n             if ($product->images != null) {\r\n                 $productimg = $product->images[0];\r\n             } else {\r\n-                $productimg = null;\r\n+                $productimg = '';\r\n             }\r\n \r\n             if ($product) {\r\n                 $cart_items = [\r\n"
                },
                {
                    "date": 1733315498494,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -116,10 +116,8 @@\n                 unset($cart_items[$key]);\r\n             }\r\n         }\r\n \r\n-        self::addCartItemsToCookie($cart_items);\r\n-\r\n         return $cart_items;\r\n     }\r\n \r\n     // add cart items to coockie\r\n"
                },
                {
                    "date": 1733315593108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n                 ];\r\n             }\r\n         }\r\n \r\n-        self::addCartItemsToCookie($cart_items);\r\n+        self::addCartItemsToCart($cart_items);\r\n         return count($cart_items);\r\n     }\r\n \r\n     // add item to cart with qty\r\n@@ -101,9 +101,9 @@\n                 ];\r\n             }\r\n         }\r\n \r\n-        self::addCartItemsToCookie($cart_items);\r\n+        self::addCartItemsToCart($cart_items);\r\n         return count($cart_items);\r\n     }\r\n \r\n     // remove item from cart\r\n@@ -116,13 +116,15 @@\n                 unset($cart_items[$key]);\r\n             }\r\n         }\r\n \r\n+        self::addCartItemsToCart($cart_items);\r\n+\r\n         return $cart_items;\r\n     }\r\n \r\n     // add cart items to coockie\r\n-    static public function addCartItemsToCookie($cart_items)\r\n+    static public function addCartItemsToCart($cart_items)\r\n     {\r\n         Cart::create($cart_items);\r\n     }\r\n \r\n@@ -152,9 +154,9 @@\n                 $cart_items[$key]['quantity']++;\r\n                 $cart_items[$key]['total_amount'] = $cart_items[$key]['quantity'] * $cart_items[$key]['unit_amount'];\r\n             }\r\n         }\r\n-        self::addCartItemsToCookie($cart_items);\r\n+        self::addCartItemsToCart($cart_items);\r\n         return $cart_items;\r\n     }\r\n \r\n     // decrement item quantity\r\n@@ -169,9 +171,9 @@\n                     $cart_items[$key]['total_amount'] = $cart_items[$key]['quantity'] * $cart_items[$key]['unit_amount'];\r\n                 }\r\n             }\r\n         }\r\n-        self::addCartItemsToCookie($cart_items);\r\n+        self::addCartItemsToCart($cart_items);\r\n         return $cart_items;\r\n     }\r\n \r\n     // typing item quantity\r\n@@ -188,9 +190,9 @@\n     //             $cart_items[$key]['total_amount'] = $cart_items[$key]['quantity'] * $cart_items[$key]['unit_amount'];\r\n     //         }\r\n     //     }\r\n \r\n-    //     self::addCartItemsToCookie($cart_items);\r\n+    //     self::addCartItemsToCart($cart_items);\r\n     //     return $cart_items;\r\n     // }\r\n \r\n     // calculate grand total\r\n"
                },
                {
                    "date": 1733315741934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -110,16 +110,10 @@\n     static public function removeCartItem($product_id)\r\n     {\r\n         $cart_items = self::getCartItemsFromCart();\r\n \r\n-        foreach ($cart_items as $key => $item) {\r\n-            if ($item['product_id'] == $product_id) {\r\n-                unset($cart_items[$key]);\r\n-            }\r\n-        }\r\n+        Cart::find($product_id)->delete();\r\n \r\n-        self::addCartItemsToCart($cart_items);\r\n-\r\n         return $cart_items;\r\n     }\r\n \r\n     // add cart items to coockie\r\n"
                },
                {
                    "date": 1733316160857,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -111,10 +111,10 @@\n     {\r\n         $cart_items = self::getCartItemsFromCart();\r\n \r\n         Cart::find($product_id)->delete();\r\n+        return count($cart_items);\r\n \r\n-        return $cart_items;\r\n     }\r\n \r\n     // add cart items to coockie\r\n     static public function addCartItemsToCart($cart_items)\r\n"
                },
                {
                    "date": 1733316207602,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,11 +108,11 @@\n \r\n     // remove item from cart\r\n     static public function removeCartItem($product_id)\r\n     {\r\n+        \r\n+        Cart::find($product_id)->delete();\r\n         $cart_items = self::getCartItemsFromCart();\r\n-\r\n-        Cart::find($product_id)->delete();\r\n         return count($cart_items);\r\n     }\r\n \r\n     // add cart items to coockie\r\n"
                },
                {
                    "date": 1733316237438,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -109,9 +109,9 @@\n     // remove item from cart\r\n     static public function removeCartItem($product_id)\r\n     {\r\n \r\n-        Cart::find($product_id)->delete();\r\n+        Cart::delete(find($product_id));\r\n         $cart_items = self::getCartItemsFromCart();\r\n         return count($cart_items);\r\n     }\r\n \r\n"
                }
            ],
            "date": 1733255545850,
            "name": "Commit-0",
            "content": "<?php\r\n\r\nnamespace App\\Helpers;\r\n\r\nuse App\\Models\\Product;\r\nuse Illuminate\\Support\\Facades\\Cookie;\r\nuse Illuminate\\Support\\Facades\\Storage;\r\n\r\nclass CartManagement\r\n{\r\n\r\n    // add item to cart\r\n    static public function addItemToCart($product_id)\r\n    {\r\n        $cart_items = self::getCartItemsFromCookie();\r\n\r\n        $existing_item = null;\r\n\r\n        foreach ($cart_items as $key => $item) {\r\n            if ($item['product_id'] == $product_id) {\r\n                $existing_item = $key;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if ($existing_item !== null) {\r\n            $cart_items[$existing_item]['quantity']++;\r\n            $cart_items[$existing_item]['total_amount'] = $cart_items[$existing_item]['quantity'] * $cart_items[$existing_item]['unit_amount'];\r\n        } else {\r\n            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'branch_id']);\r\n            // $productimgempty = url('storage/box.png');\r\n            if ($product->images != null) {\r\n                $productimg = $product->images[0];\r\n            } else {\r\n                $productimg = null;\r\n            }\r\n\r\n            if ($product) {\r\n                $cart_items[] = [\r\n                    'product_id' => $product_id,\r\n                    'name' => $product->name,\r\n                    'variant' => $product->variant,\r\n                    'slug' => $product->slug,\r\n                    'quantity' => 1,\r\n                    'unit_amount' => $product->price,\r\n                    'total_amount' => $product->price,\r\n                    'mutation_type' => 'Sales',\r\n                    'branch_id' => $product->branch_id\r\n                ];\r\n            }\r\n        }\r\n\r\n        self::addCartItemsToCookie($cart_items);\r\n        return count($cart_items);\r\n    }\r\n\r\n    // add item to cart with qty\r\n    static public function addItemToCartWithQty($product_id, $qty)\r\n    {\r\n        $cart_items = self::getCartItemsFromCookie();\r\n\r\n        $existing_item = null;\r\n\r\n        foreach ($cart_items as $key => $item) {\r\n            if ($item['product_id'] == $product_id) {\r\n                $existing_item = $key;\r\n                break;\r\n            }\r\n        }\r\n\r\n        if ($existing_item !== null) {\r\n            $cart_items[$existing_item]['quantity'] = $qty;\r\n            $cart_items[$existing_item]['total_amount'] = $cart_items[$existing_item]['quantity'] * $cart_items[$existing_item]['unit_amount'];\r\n        } else {\r\n            $product = Product::where('id', $product_id)->first(['id', 'name', 'variant', 'slug', 'price', 'branch_id']);\r\n            // $productimgempty = url('storage/box.png');\r\n            if ($product->images != null) {\r\n                $productimg = $product->images[0];\r\n            } else {\r\n                $productimg = null;\r\n            }\r\n\r\n            if ($product) {\r\n                $cart_items[] = [\r\n                    'product_id' => $product_id,\r\n                    'name' => $product->name,\r\n                    'variant' => $product->variant,\r\n                    'slug' => $product->slug,\r\n                    'quantity' => $qty,\r\n                    'unit_amount' => $product->price,\r\n                    'total_amount' => $product->price * $qty,\r\n                    'mutation_type' => 'Sales',\r\n                    'branch_id' => $product->branch_id\r\n                ];\r\n            }\r\n        }\r\n\r\n        self::addCartItemsToCookie($cart_items);\r\n        return count($cart_items);\r\n    }\r\n\r\n    // remove item from cart\r\n    static public function removeCartItem($product_id)\r\n    {\r\n        $cart_items = self::getCartItemsFromCookie();\r\n\r\n        foreach ($cart_items as $key => $item) {\r\n            if ($item['product_id'] == $product_id) {\r\n                unset($cart_items[$key]);\r\n            }\r\n        }\r\n\r\n        self::addCartItemsToCookie($cart_items);\r\n\r\n        return $cart_items;\r\n    }\r\n\r\n    // add cart items to coockie\r\n    static public function addCartItemsToCookie($cart_items)\r\n    {\r\n        Cookie::queue('cart_items', json_encode($cart_items), 60 * 24 * 30);\r\n    }\r\n\r\n    // clear cart items from cookie\r\n    static public function clearCartItems()\r\n    {\r\n        Cookie::queue(Cookie::forget('cart_items'));\r\n    }\r\n\r\n    // get all cart items from cookie\r\n    static public function getCartItemsFromCookie()\r\n    {\r\n        $cart_items = json_decode(Cookie::get('cart_items'), true);\r\n        if (!$cart_items) {\r\n            $cart_items = [];\r\n        }\r\n        return $cart_items;\r\n    }\r\n\r\n    // increment item quantity\r\n    static public function incrementQuantityToCartItem($product_id)\r\n    {\r\n        $cart_items = self::getCartItemsFromCookie();\r\n\r\n        foreach ($cart_items as $key => $item) {\r\n            if ($item['product_id'] == $product_id) {\r\n                $cart_items[$key]['quantity']++;\r\n                $cart_items[$key]['total_amount'] = $cart_items[$key]['quantity'] * $cart_items[$key]['unit_amount'];\r\n            }\r\n        }\r\n        self::addCartItemsToCookie($cart_items);\r\n        return $cart_items;\r\n    }\r\n\r\n    // decrement item quantity\r\n    static public function decrementQuantityToCartItem($product_id)\r\n    {\r\n        $cart_items = self::getCartItemsFromCookie();\r\n\r\n        foreach ($cart_items as $key => $item) {\r\n            if ($item['product_id'] == $product_id) {\r\n                if ($cart_items[$key]['quantity'] > 1) {\r\n                    $cart_items[$key]['quantity']--;\r\n                    $cart_items[$key]['total_amount'] = $cart_items[$key]['quantity'] * $cart_items[$key]['unit_amount'];\r\n                }\r\n            }\r\n        }\r\n        self::addCartItemsToCookie($cart_items);\r\n        return $cart_items;\r\n    }\r\n\r\n    // typing item quantity\r\n    // static public function typingQuantityToCartItem($product_id, $quantity)\r\n    // {\r\n    //     $cart_items = self::getCartItemsFromCookie();\r\n\r\n    //     foreach ($cart_items as $key => $item) {\r\n    //         if ($item['product_id'] == $product_id) {\r\n    //             $qty = $cart_items[$key]['quantity'];\r\n    //             $qtyubah = $quantity;\r\n    //             dd($qtyubah);\r\n    //             $cart_items[$key]['quantity']++;\r\n    //             $cart_items[$key]['total_amount'] = $cart_items[$key]['quantity'] * $cart_items[$key]['unit_amount'];\r\n    //         }\r\n    //     }\r\n\r\n    //     self::addCartItemsToCookie($cart_items);\r\n    //     return $cart_items;\r\n    // }\r\n\r\n    // calculate grand total\r\n    static public function calculateGrandTotal($items)\r\n    {\r\n        return array_sum(array_column($items, 'total_amount'));\r\n    }\r\n}\r\n"
        }
    ]
}