{
    "sourceFile": "app/Filament/Resources/OrderResource.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1731220078248,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1731221631075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -377,9 +377,8 @@\n                     ->sortable(),\n \n                 TextColumn::make('address.fullname')\n                     ->label('for')\n-                    ->searchable()\n                     ->sortable(),\n                 TextColumn::make('address.phone')\n                     ->label('phone')\n                     ->copyable()\n@@ -409,15 +408,13 @@\n \n                 TextColumn::make('created')\n                     ->label('Created by')\n                     ->sortable()\n-                    ->searchable()\n                     ->toggleable(isToggledHiddenByDefault: true),\n \n                 TextColumn::make('updated')\n                     ->label('Updated by')\n                     ->sortable()\n-                    ->searchable()\n                     ->toggleable(isToggledHiddenByDefault: true),\n             ])->defaultSort('date_order', 'desc')\n \n             ->filters([\n"
                },
                {
                    "date": 1731221937226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -375,11 +375,19 @@\n                 TextColumn::make('shipping_method')\n                     ->searchable()\n                     ->sortable(),\n \n-                TextColumn::make('address.fullname')\n+                // TextColumn::make('address.fullname')\n+                //     ->label('for')\n+                //     ->sortable(),\n+                TextColumn::make('address.first_name')\n                     ->label('for')\n+                    ->searchable()\n                     ->sortable(),\n+                TextColumn::make('address.last_name')\n+                    ->label('for')\n+                    ->searchable()\n+                    ->sortable(),\n                 TextColumn::make('address.phone')\n                     ->label('phone')\n                     ->copyable()\n                     ->copyMessage('Number phone copied')\n"
                },
                {
                    "date": 1731222042563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -379,13 +379,13 @@\n                 // TextColumn::make('address.fullname')\n                 //     ->label('for')\n                 //     ->sortable(),\n                 TextColumn::make('address.first_name')\n-                    ->label('for')\n+                    ->label('FName')\n                     ->searchable()\n                     ->sortable(),\n                 TextColumn::make('address.last_name')\n-                    ->label('for')\n+                    ->label('LName')\n                     ->searchable()\n                     ->sortable(),\n                 TextColumn::make('address.phone')\n                     ->label('phone')\n"
                },
                {
                    "date": 1732171234230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,11 +458,12 @@\n                     Actions\\ButtonAction::make('print')\n                         ->url(fn(Order $record) => route('printid', $record))\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n-                    Actions\\ButtonAction::make('phone')\n+                        Actions\\ButtonAction::make('phone')\n+                        ->openUrlInNewTab()\n+                        ->hidden(fn(Order $record): bool => ! $record->exists())\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n-                        ->openUrlInNewTab()\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n                     DeleteAction::make()\n"
                },
                {
                    "date": 1732171274240,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,9 +458,9 @@\n                     Actions\\ButtonAction::make('print')\n                         ->url(fn(Order $record) => route('printid', $record))\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n-                        Actions\\ButtonAction::make('phone')\n+                    Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n                         ->hidden(fn(Order $record): bool => ! $record->exists())\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n"
                },
                {
                    "date": 1732171726609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => ! $record->exists())\n+                        ->hidden(fn(Order $record): bool => ! $record->exists() || $record = null)\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732171745769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => ! $record->exists() || $record = null)\n+                        ->hidden(fn(Order $record): bool => ! $record->exists())\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732171751965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,13 +458,13 @@\n                     Actions\\ButtonAction::make('print')\n                         ->url(fn(Order $record) => route('printid', $record))\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n-                    Actions\\ButtonAction::make('phone')\n-                        ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => ! $record->exists())\n-                        ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n-                        ->icon('heroicon-o-phone'),\n+                    // Actions\\ButtonAction::make('phone')\n+                    //     ->openUrlInNewTab()\n+                    //     ->hidden(fn(Order $record): bool => ! $record->exists())\n+                    //     ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n+                    //     ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n                     DeleteAction::make()\n                 ])\n"
                },
                {
                    "date": 1732171875214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,13 +458,13 @@\n                     Actions\\ButtonAction::make('print')\n                         ->url(fn(Order $record) => route('printid', $record))\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n-                    // Actions\\ButtonAction::make('phone')\n-                    //     ->openUrlInNewTab()\n-                    //     ->hidden(fn(Order $record): bool => ! $record->exists())\n-                    //     ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n-                    //     ->icon('heroicon-o-phone'),\n+                    Actions\\ButtonAction::make('phone')\n+                        ->openUrlInNewTab()\n+                        ->hidden(fn(Order $record): bool => ! $record->exists())\n+                        ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n+                        ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n                     DeleteAction::make()\n                 ])\n"
                },
                {
                    "date": 1732172009360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,10 +460,10 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => ! $record->exists())\n-                        ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n+                        // ->hidden(fn(Order $record): bool => ! $record->exists())\n+                        ->url(fn(Order $record): bool => ! $record->exists() => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n                     DeleteAction::make()\n"
                },
                {
                    "date": 1732172021632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,10 +460,10 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        // ->hidden(fn(Order $record): bool => ! $record->exists())\n-                        ->url(fn(Order $record): bool => ! $record->exists() => url(\"https://wa.me/+62{$record->address->phone}\"))\n+                        ->hidden(fn(Order $record): bool => ! $record->exists())\n+                        ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n                     DeleteAction::make()\n"
                },
                {
                    "date": 1732172036868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => ! $record->exists())\n+                        ->make(fn(Order $record): bool => ! $record->exists())\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732172076897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->make(fn(Order $record): bool => ! $record->exists())\n+                        ->hidden(fn(Order $record): bool => ! $record->exists())\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732172376705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => ! $record->exists())\n+                        ->hidden(fn(Order $record): bool => ! $record->address->phone->exists())\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732172410093,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => ! $record->address->phone->exists())\n+                        ->hidden(fn(Order $record): bool => $record->address->phone == null)\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732172419052,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => $record->address->phone == null)\n+                        ->hidden(fn(Order $record): bool => $record->address->phone = null)\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732172431402,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => $record->address->phone = null)\n+                        ->hidden(fn(Order $record): bool => $record = null)\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732172451584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -460,9 +460,9 @@\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n                     Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => $record = null)\n+                        ->hidden(fn(Order $record): string => $record = null)\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732172500549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,11 +458,11 @@\n                     Actions\\ButtonAction::make('print')\n                         ->url(fn(Order $record) => route('printid', $record))\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n-                    Actions\\ButtonAction::make('phone')\n+                        Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): string => $record = null)\n+                        ->hidden(fn(Order $record): bool => ! $record->exists())\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n"
                },
                {
                    "date": 1732172509953,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,9 +458,9 @@\n                     Actions\\ButtonAction::make('print')\n                         ->url(fn(Order $record) => route('printid', $record))\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n-                        Actions\\ButtonAction::make('phone')\n+                    Actions\\ButtonAction::make('phone')\n                         ->openUrlInNewTab()\n                         ->hidden(fn(Order $record): bool => ! $record->exists())\n                         ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                         ->icon('heroicon-o-phone'),\n"
                },
                {
                    "date": 1732172537851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -458,13 +458,13 @@\n                     Actions\\ButtonAction::make('print')\n                         ->url(fn(Order $record) => route('printid', $record))\n                         ->openUrlInNewTab()\n                         ->icon('heroicon-o-printer'),\n-                    Actions\\ButtonAction::make('phone')\n-                        ->openUrlInNewTab()\n-                        ->hidden(fn(Order $record): bool => ! $record->exists())\n-                        ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n-                        ->icon('heroicon-o-phone'),\n+                    // Actions\\ButtonAction::make('phone')\n+                    //     ->openUrlInNewTab()\n+                    //     ->hidden(fn(Order $record): bool => ! $record->exists())\n+                    //     ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n+                    //     ->icon('heroicon-o-phone'),\n                     ViewAction::make(),\n                     EditAction::make(),\n                     DeleteAction::make()\n                 ])\n"
                },
                {
                    "date": 1732175593948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,8 +320,122 @@\n                                 ->default(0)\n \n                         ])->columns(['sm' => 3, 'md' => 3, 'lg' => 3, 'xl' => 3])\n                     ])\n+                    Section::make('Payments')->schema([\n+                        Repeater::make('payments')\n+                            ->relationship()\n+                            ->reorderable()\n+                            ->schema([\n+\n+                                Select::make('product_id')\n+                                    ->relationship(\n+                                        name: 'product',\n+                                        modifyQueryUsing: fn(Builder $query) => $query->orderBy('name')->orderBy('variant')->where('is_active', 1)->where('branch_id', Auth::user()->branch_id),\n+                                    )\n+                                    ->getOptionLabelFromRecordUsing(fn(Model $record) => \"{$record->name} {$record->variant}\")\n+                                    ->searchable(['name', 'variant'])\n+                                    ->preload()\n+                                    ->required()\n+                                    ->live()\n+                                    ->distinct()\n+                                    ->disableOptionsWhenSelectedInSiblingRepeaterItems()\n+                                    ->reactive()\n+                                    ->afterStateUpdated(fn($state, Set $set) => $set('unit_amount', Product::find($state)?->price ?? 0))\n+                                    ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', Product::find($state)?->price * $get('quantity') ?? 0))\n+                                    ->columnSpan(['sm' => 4, 'md' => 4, 'lg' => 4, 'xl' => 4]),\n+\n+                                TextInput::make('quantity')\n+                                    ->numeric()\n+                                    ->required()\n+                                    ->minValue(1)\n+                                    ->live(onBlur: true) \n+                                    ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', $state * $get('unit_amount')))\n+                                    ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n+\n+                                TextInput::make('unit_amount')\n+                                    ->label('Amount')\n+                                    ->required()\n+                                    ->dehydrated()\n+                                    ->numeric()\n+                                    ->live(onBlur: true)\n+                                    ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', $state * $get('quantity')))\n+                                    ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n+\n+                                TextInput::make('total_amount')\n+                                    ->label('Total')\n+                                    ->required()\n+                                    ->disabled()\n+                                    ->dehydrated()\n+                                    ->numeric()\n+                                    ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n+\n+                                Select::make('branch_id')\n+                                    ->default(fn() => Auth::user()->branch_id)\n+                                    ->relationship(\n+                                        name: 'branch',\n+                                        modifyQueryUsing: fn(Builder $query) => $query->orderBy('name')->where('is_active', 1),\n+                                    )\n+                                    ->getOptionLabelFromRecordUsing(fn(Model $record) => \"{$record->name}\")\n+                                    ->disabled()\n+                                    ->dehydrated()\n+                                    ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n+\n+                                Hidden::make('mutation_type')\n+                                    ->default('Sales'),\n+\n+                            ])\n+                            ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12])\n+                            \n+\n+                        Group::make()->schema([\n+\n+                            TextInput::make(name: 'discount')\n+                                ->default(0)\n+                                ->required()\n+                                ->numeric()\n+                                ->live(onBlur: true),\n+                            TextInput::make(name: 'shipping_amount')\n+                                ->default(0)\n+                                ->required()\n+                                ->numeric()\n+                                ->live(onBlur: true),\n+\n+                            Placeholder::make('grand_total_placeholder')\n+                                ->label('Grand Total')\n+                                ->content(function (Get $get, Set $set) {\n+\n+                                    $total = 0;\n+                                    if (!$repeaters = $get('items')) {\n+                                        return $total;\n+                                    }\n+                                    foreach ($repeaters as $key => $repeater) {\n+                                        $total += $get(\"items.{$key}.total_amount\");\n+                                    }\n+\n+                                    $discount = $get('discount');\n+                                    if ($discount != null) {\n+                                        $discount = $get('discount');\n+                                    } else {\n+                                        $discount = 0;\n+                                    }\n+                                    $shipping_amount = $get('shipping_amount');\n+                                    if ($shipping_amount != null) {\n+                                        $shipping_amount = $get('shipping_amount');\n+                                    } else {\n+                                        $shipping_amount = 0;\n+                                    }\n+                                    $bytambahan = $shipping_amount - $discount;\n+                                    $grandTotal = $total + $bytambahan;\n+                                    $set('grand_total', $grandTotal);\n+                                    return Number::currency($grandTotal, 'IDR');\n+                                }),\n+\n+                            Hidden::make('grand_total')\n+                                ->default(0)\n+\n+                        ])->columns(['sm' => 3, 'md' => 3, 'lg' => 3, 'xl' => 3])\n+                    ])\n                 ])->columnSpanFull()\n             ]);\n     }\n \n"
                },
                {
                    "date": 1732175623532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -383,10 +383,9 @@\n                                 Hidden::make('mutation_type')\n                                     ->default('Sales'),\n \n                             ])\n-                            ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12])\n-                            \n+                            ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12]),\n \n                         Group::make()->schema([\n \n                             TextInput::make(name: 'discount')\n"
                },
                {
                    "date": 1732175639312,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,10 +320,10 @@\n                                 ->default(0)\n \n                         ])->columns(['sm' => 3, 'md' => 3, 'lg' => 3, 'xl' => 3])\n                     ])\n-                    Section::make('Payments')->schema([\n-                        Repeater::make('payments')\n+                    Section::make('Order Items')->schema([\n+                        Repeater::make('items')\n                             ->relationship()\n                             ->reorderable()\n                             ->schema([\n \n@@ -346,10 +346,16 @@\n \n                                 TextInput::make('quantity')\n                                     ->numeric()\n                                     ->required()\n+                                    // ->maxValue(function (Get $get) {\n+                                    //     $boughtqty = OrderItem::query()->where('product_id', $get('product_id'))->sum('p_quantity');\n+                                    //     $soldqty = OrderItem::query()->where('product_id', $get('product_id'))->sum('quantity');\n+                                    //     return $boughtqty - $soldqty;\n+                                    // }) #ini untuk membatasi quantity sesuai stok yang ada\n                                     ->minValue(1)\n-                                    ->live(onBlur: true) \n+                                    ->live(onBlur: true) ## ini untuk klik di luar field lalu ada perubahan\n+                                    // ->live(debounce: 2000) ## ini untuk delay 2000 milidetik lalu ada perubahan\n                                     ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', $state * $get('unit_amount')))\n                                     ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n \n                                 TextInput::make('unit_amount')\n@@ -383,10 +389,27 @@\n                                 Hidden::make('mutation_type')\n                                     ->default('Sales'),\n \n                             ])\n-                            ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12]),\n+                            ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12])\n+                            ->extraItemActions([\n+                                Action::make('openProduct')\n+                                    ->tooltip('Open product')\n+                                    ->icon('heroicon-m-arrow-top-right-on-square')\n+                                    ->url(function (array $arguments, Repeater $component): ?string {\n+                                        $itemData = $component->getRawItemState($arguments['item']);\n \n+                                        $product = Product::find($itemData['product_id']);\n+\n+                                        if (! $product) {\n+                                            return null;\n+                                        }\n+\n+                                        return ProductResource::getUrl('edit', ['record' => $product]);\n+                                    }, shouldOpenInNewTab: true)\n+                                    ->hidden(fn(array $arguments, Repeater $component): bool => blank($component->getRawItemState($arguments['item'])['product_id'])),\n+                            ]),\n+\n                         Group::make()->schema([\n \n                             TextInput::make(name: 'discount')\n                                 ->default(0)\n"
                },
                {
                    "date": 1732175657122,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -455,9 +455,9 @@\n                             Hidden::make('grand_total')\n                                 ->default(0)\n \n                         ])->columns(['sm' => 3, 'md' => 3, 'lg' => 3, 'xl' => 3])\n-                    ])\n+                            ]),\n                 ])->columnSpanFull()\n             ]);\n     }\n \n"
                },
                {
                    "date": 1732175676926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n \n                         Textarea::make('notes')\n                             ->autosize()\n                             ->columnSpanFull()\n-                    ])->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12]),\n+                    ])->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12])\n \n                     Section::make('Order Items')->schema([\n                         Repeater::make('items')\n                             ->relationship()\n@@ -455,9 +455,9 @@\n                             Hidden::make('grand_total')\n                                 ->default(0)\n \n                         ])->columns(['sm' => 3, 'md' => 3, 'lg' => 3, 'xl' => 3])\n-                            ]),\n+                    ])\n                 ])->columnSpanFull()\n             ]);\n     }\n \n"
                },
                {
                    "date": 1732175718846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -182,9 +182,9 @@\n \n                         Textarea::make('notes')\n                             ->autosize()\n                             ->columnSpanFull()\n-                    ])->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12])\n+                    ])->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12]),\n \n                     Section::make('Order Items')->schema([\n                         Repeater::make('items')\n                             ->relationship()\n"
                },
                {
                    "date": 1732175763832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -320,42 +320,21 @@\n                                 ->default(0)\n \n                         ])->columns(['sm' => 3, 'md' => 3, 'lg' => 3, 'xl' => 3])\n                     ]),\n-                    Section::make('Order Items')->schema([\n-                        Repeater::make('items')\n+                    Section::make('Payments')->schema([\n+                        Repeater::make('payments')\n                             ->relationship()\n                             ->reorderable()\n                             ->schema([\n \n-                                Select::make('product_id')\n-                                    ->relationship(\n-                                        name: 'product',\n-                                        modifyQueryUsing: fn(Builder $query) => $query->orderBy('name')->orderBy('variant')->where('is_active', 1)->where('branch_id', Auth::user()->branch_id),\n-                                    )\n-                                    ->getOptionLabelFromRecordUsing(fn(Model $record) => \"{$record->name} {$record->variant}\")\n-                                    ->searchable(['name', 'variant'])\n-                                    ->preload()\n-                                    ->required()\n-                                    ->live()\n-                                    ->distinct()\n-                                    ->disableOptionsWhenSelectedInSiblingRepeaterItems()\n-                                    ->reactive()\n-                                    ->afterStateUpdated(fn($state, Set $set) => $set('unit_amount', Product::find($state)?->price ?? 0))\n-                                    ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', Product::find($state)?->price * $get('quantity') ?? 0))\n-                                    ->columnSpan(['sm' => 4, 'md' => 4, 'lg' => 4, 'xl' => 4]),\n+                                \n \n                                 TextInput::make('quantity')\n                                     ->numeric()\n                                     ->required()\n-                                    // ->maxValue(function (Get $get) {\n-                                    //     $boughtqty = OrderItem::query()->where('product_id', $get('product_id'))->sum('p_quantity');\n-                                    //     $soldqty = OrderItem::query()->where('product_id', $get('product_id'))->sum('quantity');\n-                                    //     return $boughtqty - $soldqty;\n-                                    // }) #ini untuk membatasi quantity sesuai stok yang ada\n                                     ->minValue(1)\n-                                    ->live(onBlur: true) ## ini untuk klik di luar field lalu ada perubahan\n-                                    // ->live(debounce: 2000) ## ini untuk delay 2000 milidetik lalu ada perubahan\n+                                    ->live(onBlur: true) \n                                     ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', $state * $get('unit_amount')))\n                                     ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n \n                                 TextInput::make('unit_amount')\n@@ -389,27 +368,10 @@\n                                 Hidden::make('mutation_type')\n                                     ->default('Sales'),\n \n                             ])\n-                            ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12])\n-                            ->extraItemActions([\n-                                Action::make('openProduct')\n-                                    ->tooltip('Open product')\n-                                    ->icon('heroicon-m-arrow-top-right-on-square')\n-                                    ->url(function (array $arguments, Repeater $component): ?string {\n-                                        $itemData = $component->getRawItemState($arguments['item']);\n+                            ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12]),\n \n-                                        $product = Product::find($itemData['product_id']);\n-\n-                                        if (! $product) {\n-                                            return null;\n-                                        }\n-\n-                                        return ProductResource::getUrl('edit', ['record' => $product]);\n-                                    }, shouldOpenInNewTab: true)\n-                                    ->hidden(fn(array $arguments, Repeater $component): bool => blank($component->getRawItemState($arguments['item'])['product_id'])),\n-                            ]),\n-\n                         Group::make()->schema([\n \n                             TextInput::make(name: 'discount')\n                                 ->default(0)\n"
                },
                {
                    "date": 1732175811029,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -372,9 +372,9 @@\n                             ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12]),\n \n                         Group::make()->schema([\n \n-                            TextInput::make(name: 'discount')\n+                            TextInput::make(name: 'total_payment')\n                                 ->default(0)\n                                 ->required()\n                                 ->numeric()\n                                 ->live(onBlur: true),\n@@ -383,9 +383,9 @@\n                                 ->required()\n                                 ->numeric()\n                                 ->live(onBlur: true),\n \n-                            Placeholder::make('grand_total_placeholder')\n+                            Placeholder::make('total_payment_placeholder')\n                                 ->label('Grand Total')\n                                 ->content(function (Get $get, Set $set) {\n \n                                     $total = 0;\n@@ -413,9 +413,9 @@\n                                     $set('grand_total', $grandTotal);\n                                     return Number::currency($grandTotal, 'IDR');\n                                 }),\n \n-                            Hidden::make('grand_total')\n+                            Hidden::make('total_payment')\n                                 ->default(0)\n \n                         ])->columns(['sm' => 3, 'md' => 3, 'lg' => 3, 'xl' => 3])\n                     ])\n"
                }
            ],
            "date": 1731220078248,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Filament\\Resources;\n\nuse App\\Filament\\Resources\\OrderResource\\Pages;\nuse App\\Filament\\Resources\\OrderResource\\RelationManagers;\nuse App\\Filament\\Resources\\OrderResource\\RelationManagers\\AddressRelationManager;\nuse App\\Models\\Branch;\nuse App\\Models\\Order;\nuse App\\Models\\OrderItem;\nuse App\\Models\\Product;\nuse App\\Models\\User;\nuse Filament\\Actions\\Action as ActionsAction;\nuse Filament\\Forms;\nuse Filament\\Forms\\Components\\Actions\\Action;\nuse Filament\\Forms\\Components\\DatePicker;\nuse Filament\\Forms\\Components\\Group;\nuse Filament\\Forms\\Components\\Hidden;\nuse Filament\\Forms\\Components\\Placeholder;\nuse Filament\\Forms\\Components\\Repeater;\nuse Filament\\Forms\\Components\\Section;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Textarea;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Components\\Toggle;\nuse Filament\\Forms\\Components\\ToggleButtons;\nuse Filament\\Forms\\Form;\nuse Filament\\Forms\\Get;\nuse Filament\\Forms\\Set;\nuse Filament\\Pages\\Actions;\nuse Filament\\Resources\\Resource;\nuse Filament\\Support\\RawJs;\nuse Filament\\Tables;\nuse Filament\\Tables\\Actions\\ActionGroup;\nuse Filament\\Tables\\Actions\\DeleteAction;\nuse Filament\\Tables\\Actions\\EditAction;\nuse Filament\\Tables\\Actions\\ViewAction;\nuse Filament\\Tables\\Columns\\SelectColumn;\nuse Filament\\Tables\\Columns\\Summarizers\\Sum;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Columns\\ToggleColumn;\nuse Filament\\Tables\\Enums\\ActionsPosition;\nuse Filament\\Tables\\Filters\\Filter;\nuse Filament\\Tables\\Filters\\SelectFilter;\nuse Filament\\Tables\\Table;\nuse Illuminate\\Database\\Eloquent\\Builder;\nuse Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Database\\Eloquent\\Model;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse Illuminate\\Support\\Facades\\Auth;\nuse Illuminate\\Support\\Number;\nuse Vermaysha\\Wilayah\\Models\\District;\nuse Filament\\Forms\\Components\\DateTimePicker;\n\nuse function PHPUnit\\Framework\\isTrue;\n\nclass OrderResource extends Resource\n{\n    protected static ?string $model = Order::class;\n\n    protected static ?string $label = 'Sale Order';\n\n    protected static ?string $navigationIcon = 'heroicon-o-shopping-cart';\n\n\n    public static function form(Form $form): Form\n    {\n        return $form\n\n            ->schema([\n                Group::make()->schema([\n                    Section::make('Order Information')->schema([\n\n                        Hidden::make('branch_id')\n                            ->default(fn() => Auth::user()->branch_id)\n                            ->required(),\n\n                        Hidden::make('created_by')\n                            ->default(fn() => Auth::user()->id) ## keperluan untuk memilih user setelah ada auth\n                            // ->disabledOn('edit')\n                            ->required(),\n\n                        Hidden::make('updated_by')\n                            ->default(fn() => Auth::user()->id) ## keperluan untuk memilih user setelah ada auth\n                            ->required(),\n\n                        TextInput::make('code_tr')\n                            ->label('No. Transsaction')\n                            ->default('ORD' . date('YmdHis')) ## Jika ingin menggunakan OrderID otomatis\n                            ->readOnly()\n                            ->columnSpan(6),\n\n                        DateTimePicker::make('date_order')\n                            ->default(now())\n                            ->required()\n                            ->columnSpan(6),\n\n                        Select::make('user_id')\n                            ->label('Customer')\n                            ->relationship('user', 'name')\n                            ->searchable()\n                            ->preload()\n                            ->required()\n                            ->columnSpan(4),\n\n                        ToggleButtons::make('sales_type')\n                            ->required()\n                            ->grouped()\n                            ->options([\n                                'dine_in' => 'Dine In',\n                                'self_pickup' => 'Self Pickup',\n                                'delivery' => 'Delivery'\n                            ])\n                            ->live()\n                            ->columnSpan(6),\n\n                        Select::make('currency')\n                            ->default('idr')\n                            ->required()\n                            ->options([\n                                'idr' => 'IDR',\n                                'usd' => 'USD',\n                                'eur' => 'EUR'\n                            ])\n                            ->columnSpan(2),\n\n                        Toggle::make('is_paid')\n                            ->required()\n                            ->label('Paid?')\n                            ->columnSpan(3),\n\n                        ToggleButtons::make('payment_method')\n                            ->options([\n                                'cash' => 'Cash',\n                                'transfer' => 'Transfer',\n                            ])\n                            ->required()\n                            ->grouped()\n                            ->columnSpan(5),\n\n                        Select::make('shipping_method')\n                            ->options([\n                                'kurir_taibah' => 'Kurir Taibah',\n                                'grabfood' => 'GrabFood',\n                                'gofood' => 'GoFood'\n                            ])\n                            ->required(function (Get $get) {\n                                if ($get('sales_type') == 'delivery') {\n                                    return true;\n                                } else {\n                                    return false;\n                                }\n                            })\n                            ->columnSpan(4),\n\n                        ToggleButtons::make('status')\n                            ->inline()\n                            ->default('new')\n                            ->required()\n                            ->columnSpanFull()\n                            ->options([\n                                'new' => 'New',\n                                'processing' => 'Processing',\n                                'shipped' => 'Shipped',\n                                'delivered' => 'Delivered',\n                                'canceled' => 'Canceled'\n                            ])\n                            ->colors([\n                                'new' => 'info',\n                                'processing' => 'warning',\n                                'shipped' => 'gray',\n                                'delivered' => 'success',\n                                'canceled' => 'danger'\n                            ])\n                            ->icons([\n                                'new' => 'heroicon-m-sparkles',\n                                'processing' => 'heroicon-m-arrow-path',\n                                'shipped' => 'heroicon-m-truck',\n                                'delivered' => 'heroicon-m-check-badge',\n                                'canceled' => 'heroicon-m-x-circle'\n                            ]),\n\n                        Textarea::make('notes')\n                            ->autosize()\n                            ->columnSpanFull()\n                    ])->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12]),\n\n                    Section::make('Order Items')->schema([\n                        Repeater::make('items')\n                            ->relationship()\n                            ->reorderable()\n                            ->schema([\n\n                                Select::make('product_id')\n                                    ->relationship(\n                                        name: 'product',\n                                        modifyQueryUsing: fn(Builder $query) => $query->orderBy('name')->orderBy('variant')->where('is_active', 1)->where('branch_id', Auth::user()->branch_id),\n                                    )\n                                    ->getOptionLabelFromRecordUsing(fn(Model $record) => \"{$record->name} {$record->variant}\")\n                                    ->searchable(['name', 'variant'])\n                                    ->preload()\n                                    ->required()\n                                    ->live()\n                                    ->distinct()\n                                    ->disableOptionsWhenSelectedInSiblingRepeaterItems()\n                                    ->reactive()\n                                    ->afterStateUpdated(fn($state, Set $set) => $set('unit_amount', Product::find($state)?->price ?? 0))\n                                    ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', Product::find($state)?->price * $get('quantity') ?? 0))\n                                    ->columnSpan(['sm' => 4, 'md' => 4, 'lg' => 4, 'xl' => 4]),\n\n                                TextInput::make('quantity')\n                                    ->numeric()\n                                    ->required()\n                                    // ->maxValue(function (Get $get) {\n                                    //     $boughtqty = OrderItem::query()->where('product_id', $get('product_id'))->sum('p_quantity');\n                                    //     $soldqty = OrderItem::query()->where('product_id', $get('product_id'))->sum('quantity');\n                                    //     return $boughtqty - $soldqty;\n                                    // }) #ini untuk membatasi quantity sesuai stok yang ada\n                                    ->minValue(1)\n                                    ->live(onBlur: true) ## ini untuk klik di luar field lalu ada perubahan\n                                    // ->live(debounce: 2000) ## ini untuk delay 2000 milidetik lalu ada perubahan\n                                    ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', $state * $get('unit_amount')))\n                                    ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n\n                                TextInput::make('unit_amount')\n                                    ->label('Amount')\n                                    ->required()\n                                    ->dehydrated()\n                                    ->numeric()\n                                    ->live(onBlur: true)\n                                    ->afterStateUpdated(fn($state, Set $set, Get $get) => $set('total_amount', $state * $get('quantity')))\n                                    ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n\n                                TextInput::make('total_amount')\n                                    ->label('Total')\n                                    ->required()\n                                    ->disabled()\n                                    ->dehydrated()\n                                    ->numeric()\n                                    ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n\n                                Select::make('branch_id')\n                                    ->default(fn() => Auth::user()->branch_id)\n                                    ->relationship(\n                                        name: 'branch',\n                                        modifyQueryUsing: fn(Builder $query) => $query->orderBy('name')->where('is_active', 1),\n                                    )\n                                    ->getOptionLabelFromRecordUsing(fn(Model $record) => \"{$record->name}\")\n                                    ->disabled()\n                                    ->dehydrated()\n                                    ->columnSpan(['sm' => 2, 'md' => 2, 'lg' => 2, 'xl' => 2]),\n\n                                Hidden::make('mutation_type')\n                                    ->default('Sales'),\n\n                            ])\n                            ->columns(['sm' => 12, 'md' => 12, 'lg' => 12, 'xl' => 12])\n                            ->extraItemActions([\n                                Action::make('openProduct')\n                                    ->tooltip('Open product')\n                                    ->icon('heroicon-m-arrow-top-right-on-square')\n                                    ->url(function (array $arguments, Repeater $component): ?string {\n                                        $itemData = $component->getRawItemState($arguments['item']);\n\n                                        $product = Product::find($itemData['product_id']);\n\n                                        if (! $product) {\n                                            return null;\n                                        }\n\n                                        return ProductResource::getUrl('edit', ['record' => $product]);\n                                    }, shouldOpenInNewTab: true)\n                                    ->hidden(fn(array $arguments, Repeater $component): bool => blank($component->getRawItemState($arguments['item'])['product_id'])),\n                            ]),\n\n                        Group::make()->schema([\n\n                            TextInput::make(name: 'discount')\n                                ->default(0)\n                                ->required()\n                                ->numeric()\n                                ->live(onBlur: true),\n                            TextInput::make(name: 'shipping_amount')\n                                ->default(0)\n                                ->required()\n                                ->numeric()\n                                ->live(onBlur: true),\n\n                            Placeholder::make('grand_total_placeholder')\n                                ->label('Grand Total')\n                                ->content(function (Get $get, Set $set) {\n\n                                    $total = 0;\n                                    if (!$repeaters = $get('items')) {\n                                        return $total;\n                                    }\n                                    foreach ($repeaters as $key => $repeater) {\n                                        $total += $get(\"items.{$key}.total_amount\");\n                                    }\n\n                                    $discount = $get('discount');\n                                    if ($discount != null) {\n                                        $discount = $get('discount');\n                                    } else {\n                                        $discount = 0;\n                                    }\n                                    $shipping_amount = $get('shipping_amount');\n                                    if ($shipping_amount != null) {\n                                        $shipping_amount = $get('shipping_amount');\n                                    } else {\n                                        $shipping_amount = 0;\n                                    }\n                                    $bytambahan = $shipping_amount - $discount;\n                                    $grandTotal = $total + $bytambahan;\n                                    $set('grand_total', $grandTotal);\n                                    return Number::currency($grandTotal, 'IDR');\n                                }),\n\n                            Hidden::make('grand_total')\n                                ->default(0)\n\n                        ])->columns(['sm' => 3, 'md' => 3, 'lg' => 3, 'xl' => 3])\n                    ])\n                ])->columnSpanFull()\n            ]);\n    }\n\n    public static function table(Table $table): Table\n    {\n        return $table\n\n            ->modifyQueryUsing(function (Builder $query) {\n                return $query->addSelect([\n                    'created' => User::query()->select('name')\n                        ->whereColumn('id', 'created_by'),\n                    'updated' => User::query()->select('name')\n                        ->whereColumn('id', 'updated_by'),\n                ]);\n            })\n\n            ->columns([\n\n                ToggleColumn::make('is_paid')\n                    ->label('Paid')\n                    ->sortable(),\n\n                TextColumn::make('user.name')\n                    ->label('Customer')\n                    ->sortable()\n                    ->searchable(),\n                // ->searchable(isIndividual:true),\n\n                TextColumn::make('grand_total')\n                    ->numeric(locale: 'nl')->prefix('Rp ')\n                    ->sortable()\n                    ->alignRight()\n                    ->summarize(Sum::make()->numeric(locale: 'nl')->prefix('Rp ')->label('Total')),\n\n                TextColumn::make('payment_method')\n                    ->searchable()\n                    ->sortable(),\n\n                SelectColumn::make('status')\n                    ->options([\n                        'new' => 'New',\n                        'processing' => 'Processing',\n                        'shipped' => 'Shipped',\n                        'delivered' => 'Delivered',\n                        'canceled' => 'Canceled'\n                    ])\n                    ->searchable()\n                    ->sortable()\n                    ->selectablePlaceholder(false),\n\n                TextColumn::make('shipping_method')\n                    ->searchable()\n                    ->sortable(),\n\n                TextColumn::make('address.fullname')\n                    ->label('for')\n                    ->searchable()\n                    ->sortable(),\n                TextColumn::make('address.phone')\n                    ->label('phone')\n                    ->copyable()\n                    ->copyMessage('Number phone copied')\n                    ->copyMessageDuration(1500)\n                    ->searchable()\n                    ->sortable(),\n\n                TextColumn::make('code_tr')\n                    ->searchable()\n                    ->sortable(),\n\n                TextColumn::make('date_order')\n                    ->dateTime()\n                    ->sortable()\n                    ->toggleable(isToggledHiddenByDefault: true),\n\n                TextColumn::make('created_at')\n                    ->dateTime()\n                    ->sortable()\n                    ->toggleable(isToggledHiddenByDefault: true),\n\n                TextColumn::make('updated_at')\n                    ->dateTime()\n                    ->sortable()\n                    ->toggleable(isToggledHiddenByDefault: true),\n\n                TextColumn::make('created')\n                    ->label('Created by')\n                    ->sortable()\n                    ->searchable()\n                    ->toggleable(isToggledHiddenByDefault: true),\n\n                TextColumn::make('updated')\n                    ->label('Updated by')\n                    ->sortable()\n                    ->searchable()\n                    ->toggleable(isToggledHiddenByDefault: true),\n            ])->defaultSort('date_order', 'desc')\n\n            ->filters([\n\n                Filter::make('created_at')\n                    ->form([\n                        DatePicker::make('date_order_from'),\n                        DatePicker::make('date_order_until'),\n                    ])\n                    ->query(function (Builder $query, array $data): Builder {\n                        return $query\n                            ->when(\n                                $data['date_order_from'],\n                                fn(Builder $query, $date): Builder => $query->whereDate('date_order', '>=', $date),\n                            )\n                            ->when(\n                                $data['date_order_until'],\n                                fn(Builder $query, $date): Builder => $query->whereDate('date_order', '<=', $date),\n                            );\n                    }),\n\n                Filter::make('is_paid')\n                    ->label('Paid')\n                    ->query(fn(Builder $query): Builder => $query->where('is_paid', true)),\n\n                Filter::make('Unpaid')\n                    ->label('Unpaid')\n                    ->query(fn(Builder $query): Builder => $query->where('is_paid', false)->where('status', '!=', 'canceled')),\n            ])\n\n            ->actions([\n                ActionGroup::make([\n                    Actions\\ButtonAction::make('print')\n                        ->url(fn(Order $record) => route('printid', $record))\n                        ->openUrlInNewTab()\n                        ->icon('heroicon-o-printer'),\n                    Actions\\ButtonAction::make('phone')\n                        ->url(fn(Order $record) => url(\"https://wa.me/+62{$record->address->phone}\"))\n                        ->openUrlInNewTab()\n                        ->icon('heroicon-o-phone'),\n                    ViewAction::make(),\n                    EditAction::make(),\n                    DeleteAction::make()\n                ])\n            ], position: ActionsPosition::BeforeColumns)\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n\n                    Tables\\Actions\\BulkAction::make(name: 'Paid?')\n                        ->requiresConfirmation()\n                        ->color('info')\n                        ->icon('heroicon-o-credit-card')\n                        ->action(function (Collection $records, array $data): void {\n                            foreach ($records as $record) {\n                                $record->is_paid = $data['is_paid'];\n                                $record->save();\n                            }\n                        })\n                        ->form([\n                            Toggle::make('is_paid')\n                                ->label('Paid ?')\n                                ->required(),\n                        ]),\n\n                    Tables\\Actions\\BulkAction::make(name: 'Status')\n                        ->requiresConfirmation()\n                        ->deselectRecordsAfterCompletion()\n                        ->color('warning')\n                        ->icon('heroicon-o-flag')\n                        ->action(function (Collection $records, array $data): void {\n                            foreach ($records as $record) {\n                                $record->status = $data['status'];\n                                $record->save();\n                            }\n                        })\n                        ->form([\n                            Select::make('status')\n                                ->label('Status')\n                                ->options([\n                                    'new' => 'New',\n                                    'processing' => 'Processing',\n                                    'shipped' => 'Shipped',\n                                    'delivered' => 'Delivered',\n                                    'canceled' => 'Canceled'\n                                ])\n                                ->required(),\n                        ]),\n\n                    Tables\\Actions\\DeleteBulkAction::make(),\n\n                ]),\n            ])\n            ->groups([\n                Tables\\Grouping\\Group::make('date_order')\n                    ->label('Order Date')\n                    ->date()\n                    ->collapsible(),\n                Tables\\Grouping\\Group::make('user.name')\n                    ->label('Customer')\n                    ->collapsible(),\n            ])\n            ->selectCurrentPageOnly()\n            ->recordUrl(fn(Model $record): string => OrderResource::getUrl('edit', ['record' => $record]))\n            ->query(function (Order $query) {\n                if (Auth::user()->id != 1) {\n                    return $query->where('branch_id', Auth::user()->branch_id);\n                } else {\n                    return $query;\n                };\n            });\n    }\n\n    public static function getRelations(): array\n    {\n        return [\n            AddressRelationManager::class\n        ];\n    }\n\n    public static function getNavigationBadge(): ?string\n    {\n        // return static::getModel()::count(); ## jika ingin hitung semua\n        if (Auth::user()->id != 1) {\n            return static::getModel()::query()->where('branch_id', Auth::user()->branch_id)->where('is_paid', 0)->count();\n        } else {\n            return static::getModel()::query()->where('is_paid', 0)->count();\n        };\n    }\n\n    public static function getNavigationBadgeColor(): string|array|null\n    {\n        return static::getModel()::count() > 10 ? 'danger' : 'success';\n    }\n\n    public static function getPages(): array\n    {\n        return [\n            'index' => Pages\\ListOrders::route('/'),\n            'create' => Pages\\CreateOrder::route('/create'),\n            'view' => Pages\\ViewOrder::route('/{record}'),\n            'edit' => Pages\\EditOrder::route('/{record}/edit'),\n        ];\n    }\n}\n"
        }
    ]
}