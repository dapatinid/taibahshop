{
    "sourceFile": "app/Filament/Resources/OrderResource/RelationManagers/AddressRelationManager.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1733685406321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733762088674,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n                     }),\n \n                 Select::make('city')\n                     ->options(function (Get $get): Collection {\n-                        return City::query()->where('province_code', $get('state'))->pluck('name', 'code');\n+                        return City::query()->orderBy('name', 'ASC')->where('province_code', $get('state'))->pluck('name', 'code');\n                     })\n                     ->searchable()\n                     ->required()\n                     ->live()\n@@ -72,9 +72,9 @@\n                     }),\n \n                 Select::make('district')\n                     ->options(function (Get $get): Collection {\n-                        return District::query()->where('city_code', $get('city'))->pluck('name', 'code');\n+                        return District::query()->orderBy('name', 'ASC')->where('city_code', $get('city'))->pluck('name', 'code');\n                     })\n                     ->searchable()\n                     ->required()\n                     ->live()\n@@ -83,9 +83,9 @@\n                     }),\n \n                 Select::make('village')\n                     ->options(function (Get $get): Collection {\n-                        return Village::query()->where('district_code', $get('district'))->pluck('name', 'code');\n+                        return Village::query()->orderBy('name', 'ASC')->where('district_code', $get('district'))->pluck('name', 'code');\n                     })\n                     ->searchable()\n                     ->required(),\n \n"
                }
            ],
            "date": 1733685406321,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Filament\\Resources\\OrderResource\\RelationManagers;\n\nuse Filament\\Forms;\nuse Filament\\Forms\\Components\\Select;\nuse Filament\\Forms\\Components\\Split;\nuse Filament\\Forms\\Components\\Textarea;\nuse Filament\\Forms\\Components\\TextInput;\nuse Filament\\Forms\\Form;\nuse Filament\\Forms\\Get;\nuse Filament\\Forms\\Set;\nuse Filament\\Resources\\RelationManagers\\RelationManager;\nuse Filament\\Tables;\nuse Filament\\Tables\\Columns\\Layout\\Stack;\nuse Filament\\Tables\\Columns\\SelectColumn;\nuse Filament\\Tables\\Columns\\TextColumn;\nuse Filament\\Tables\\Table;\nuse Illuminate\\Database\\Eloquent\\Builder;\n// use Illuminate\\Database\\Eloquent\\Collection;\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\nuse Illuminate\\Support\\Collection;\nuse Vermaysha\\Wilayah\\Models\\City;\nuse Vermaysha\\Wilayah\\Models\\District;\nuse Vermaysha\\Wilayah\\Models\\Province;\nuse Vermaysha\\Wilayah\\Models\\Village;\n\nclass AddressRelationManager extends RelationManager\n{\n    protected static string $relationship = 'address';\n\n    public function form(Form $form): Form\n    {\n        return $form\n            ->schema([\n\n                TextInput::make('first_name')\n                    ->required()\n                    ->maxLength(255),\n\n                TextInput::make('last_name')\n                    ->required()\n                    ->maxLength(255),\n\n                TextInput::make('phone')\n                    ->required()\n                    ->tel()\n                    ->maxLength(20),\n\n                TextInput::make('zip_code')\n                    ->numeric()\n                    ->maxLength(10),\n\n                Select::make('state')\n                    ->options(Province::query()->pluck('name', 'code'))\n                    ->searchable()\n                    ->required()\n                    ->live()\n                    ->afterStateUpdated(function (Set $set) {\n                        $set('city', null);\n                    }),\n\n                Select::make('city')\n                    ->options(function (Get $get): Collection {\n                        return City::query()->where('province_code', $get('state'))->pluck('name', 'code');\n                    })\n                    ->searchable()\n                    ->required()\n                    ->live()\n                    ->afterStateUpdated(function (Set $set) {\n                        $set('district', null);\n                    }),\n\n                Select::make('district')\n                    ->options(function (Get $get): Collection {\n                        return District::query()->where('city_code', $get('city'))->pluck('name', 'code');\n                    })\n                    ->searchable()\n                    ->required()\n                    ->live()\n                    ->afterStateUpdated(function (Set $set) {\n                        $set('village', null);\n                    }),\n\n                Select::make('village')\n                    ->options(function (Get $get): Collection {\n                        return Village::query()->where('district_code', $get('district'))->pluck('name', 'code');\n                    })\n                    ->searchable()\n                    ->required(),\n\n                Textarea::make('street_address')\n                    ->required()\n                    ->columnSpanFull(),\n            ]);\n    }\n\n    public function table(Table $table): Table\n    {\n        return $table\n            ->modifyQueryUsing(function (Builder $query) {\n                return $query->addSelect([\n                    'provinsi' => Province::query()->select('name')\n                        ->whereColumn('code', 'state'),\n                    'kabupaten' => City::query()->select('name')\n                        ->whereColumn('code', 'city'),\n                    'kecamatan' => District::query()->select('name')\n                        ->whereColumn('code', 'district'),\n                    'desa' => Village::query()->select('name')\n                        ->whereColumn('code', 'village'),\n                ]);\n            })\n            ->recordTitleAttribute('street_address')\n            ->columns([\n                Tables\\Columns\\Layout\\Split::make([\n                    Tables\\Columns\\Layout\\Stack::make([\n                        TextColumn::make('fullname')\n                            ->label('Full Name'),\n                        TextColumn::make('phone')->prefix('Phone '),\n                    ]),\n                    Tables\\Columns\\Layout\\Stack::make([\n                        TextColumn::make('street_address'),\n                        TextColumn::make('zip_code')->prefix('Kode Pos ')->disabled(),\n                    ]),\n                    Tables\\Columns\\Layout\\Stack::make([\n                        TextColumn::make('provinsi'),\n                        TextColumn::make('kabupaten'),\n                        TextColumn::make('kecamatan'),\n                        TextColumn::make('desa'),\n                    ]),\n\n                ])\n            ])\n            ->filters([\n                //\n            ])\n            ->headerActions([\n                Tables\\Actions\\CreateAction::make(),\n            ])\n            ->actions([\n                Tables\\Actions\\EditAction::make(),\n                Tables\\Actions\\DeleteAction::make(),\n            ])\n            ->bulkActions([\n                Tables\\Actions\\BulkActionGroup::make([\n                    Tables\\Actions\\DeleteBulkAction::make(),\n                ]),\n            ]);\n    }\n}\n"
        }
    ]
}