{
    "sourceFile": "app/Filament/Resources/OrderItemResource.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1732172909549,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1732263627074,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n use Illuminate\\Database\\Eloquent\\Builder;\r\n use Illuminate\\Database\\Eloquent\\SoftDeletingScope;\r\n use Illuminate\\Support\\Facades\\Auth;\r\n use Filament\\Forms\\Components\\DateTimePicker;\r\n+use Filament\\Tables\\Columns\\Layout\\Stack;\r\n \r\n class OrderItemResource extends Resource\r\n {\r\n     protected static ?string $model = OrderItem::class;\r\n@@ -178,8 +179,9 @@\n                     ->dateTime()\r\n                     ->sortable()\r\n                     ->toggleable(isToggledHiddenByDefault: true),\r\n \r\n+                    Stack::make([\r\n                 TextColumn::make('order.code_tr')\r\n                     ->sortable()\r\n                     ->searchable(),\r\n                 TextColumn::make('porder.code_tr')\r\n@@ -193,8 +195,9 @@\n                     ->searchable(),\r\n                 TextColumn::make('trStkIn.code_tr')\r\n                     ->sortable()\r\n                     ->searchable(),\r\n+                    ]),\r\n \r\n             ])->defaultSort('created_at', 'desc')\r\n             ->groups([\r\n                 Tables\\Grouping\\Group::make('created_at')\r\n"
                },
                {
                    "date": 1732263680714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n     {\r\n         return $table\r\n             ->columns([\r\n \r\n-\r\n+                Split::make([\r\n                 TextColumn::make('order.status')\r\n                     ->label('Sales status')\r\n                     ->badge()\r\n                     ->formatStateUsing(fn(string $state): string => match ($state) {\r\n@@ -196,8 +196,9 @@\n                     TextColumn::make('trStkIn.code_tr')\r\n                         ->sortable()\r\n                         ->searchable(),\r\n                 ]),\r\n+            ])\r\n \r\n             ])->defaultSort('created_at', 'desc')\r\n             ->groups([\r\n                 Tables\\Grouping\\Group::make('created_at')\r\n"
                },
                {
                    "date": 1732263692332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,8 +20,9 @@\n use Illuminate\\Database\\Eloquent\\Builder;\r\n use Illuminate\\Database\\Eloquent\\SoftDeletingScope;\r\n use Illuminate\\Support\\Facades\\Auth;\r\n use Filament\\Forms\\Components\\DateTimePicker;\r\n+use Filament\\Tables\\Columns\\Layout\\Split;\r\n use Filament\\Tables\\Columns\\Layout\\Stack;\r\n \r\n class OrderItemResource extends Resource\r\n {\r\n"
                }
            ],
            "date": 1732172909549,
            "name": "Commit-0",
            "content": "<?php\r\n\r\nnamespace App\\Filament\\Resources;\r\n\r\nuse App\\Filament\\Resources\\OrderItemResource\\Pages;\r\nuse App\\Filament\\Resources\\OrderItemResource\\RelationManagers;\r\nuse App\\Models\\OrderItem;\r\nuse App\\Models\\Order;\r\nuse App\\Models\\Porder;\r\nuse Filament\\Forms;\r\nuse Filament\\Forms\\Form;\r\nuse Filament\\Forms\\Components\\DatePicker;\r\nuse Filament\\Resources\\Resource;\r\nuse Filament\\Tables;\r\nuse Filament\\Tables\\Columns\\Summarizers\\Sum;\r\nuse Filament\\Tables\\Columns\\TextColumn;\r\nuse Filament\\Tables\\Table;\r\nuse Filament\\Tables\\Filters\\Filter;\r\nuse Filament\\Tables\\Filters\\SelectFilter;\r\nuse Illuminate\\Database\\Eloquent\\Builder;\r\nuse Illuminate\\Database\\Eloquent\\SoftDeletingScope;\r\nuse Illuminate\\Support\\Facades\\Auth;\r\nuse Filament\\Forms\\Components\\DateTimePicker;\r\n\r\nclass OrderItemResource extends Resource\r\n{\r\n    protected static ?string $model = OrderItem::class;\r\n    protected static ?string $label = 'Stock Histories';\r\n    protected static ?string $navigationGroup = 'Product';\r\n    protected static ?int $navigationSort = 5;\r\n\r\n    protected static ?string $navigationIcon = 'heroicon-o-clock';\r\n\r\n    public static function form(Form $form): Form\r\n    {\r\n        return $form\r\n            ->schema([\r\n                // Forms\\Components\\TextInput::make('porder_id')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('order_id')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('adj_item_id')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('product_id')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('p_quantity')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('p_unit_amount')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('p_total_amount')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('quantity')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('unit_amount')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('total_amount')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('notes')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('stock_before')\r\n                //     ->numeric(),\r\n                // Forms\\Components\\TextInput::make('stock_after')\r\n                //     ->numeric(),\r\n            ]);\r\n    }\r\n\r\n    public static function table(Table $table): Table\r\n    {\r\n        return $table\r\n            ->columns([\r\n                \r\n                \r\n                TextColumn::make('order.status')\r\n                ->label('Sales status')\r\n                ->badge()\r\n                    ->formatStateUsing(fn (string $state): string => match ($state) {\r\n                        'new' => 'New',\r\n                        'processing' => 'Processing',\r\n                        'shipped' => 'Shipped',\r\n                        'delivered' => 'Delivered',\r\n                        'canceled' => 'canceled'\r\n                    })\r\n                    ->color(fn(string $state): string => match ($state) {\r\n                        'new' => 'info',\r\n                        'processing' => 'warning',\r\n                        'shipped' => 'gray',\r\n                        'delivered' => 'success',\r\n                        'canceled' => 'danger'\r\n                    })\r\n                    ->icon(fn(string $state): string => match ($state) {\r\n                        'new' => 'heroicon-m-sparkles',\r\n                        'processing' => 'heroicon-m-arrow-path',\r\n                        'shipped' => 'heroicon-m-truck',\r\n                        'delivered' => 'heroicon-m-check-badge',\r\n                        'canceled' => 'heroicon-m-x-circle'\r\n                    })\r\n                    ->sortable()\r\n                    ->searchable(isIndividual: true),\r\n\r\n                TextColumn::make('product.alias')\r\n                    ->label('Product')\r\n                    ->sortable()\r\n                    ->searchable(isIndividual: true),\r\n\r\n                TextColumn::make('p_quantity')\r\n                    ->label('Qty In')\r\n                    ->numeric()\r\n                    ->sortable()\r\n                    ->summarize(Sum::make()->numeric(locale: 'nl')->label('Total+')),\r\n                TextColumn::make('quantity')\r\n                    ->label('Qty Out')\r\n                    ->numeric()\r\n                    ->sortable()\r\n                    ->summarize(Sum::make()->numeric(locale: 'nl')->label('Total-')),\r\n\r\n\r\n                TextColumn::make('unit_amount')\r\n                    ->label('Amount In')\r\n                    ->numeric(locale: 'nl')\r\n                    ->sortable()\r\n                    ->summarize(Sum::make()->numeric(locale: 'nl')->prefix('Rp ')->label('Total+')),\r\n                TextColumn::make('total_amount')\r\n                    ->label('T. Amount In')\r\n                    ->numeric(locale: 'nl')\r\n                    ->sortable()\r\n                    ->summarize(Sum::make()->numeric(locale: 'nl')->prefix('Rp ')->label('Total+')),\r\n\r\n                TextColumn::make('p_unit_amount')\r\n                    ->label('Amount Out')\r\n                    ->numeric(locale: 'nl')\r\n                    ->sortable()\r\n                    ->summarize(Sum::make()->numeric(locale: 'nl')->prefix('Rp ')->label('Total-')),\r\n                TextColumn::make('p_total_amount')\r\n                    ->label('T. Amount Out')\r\n                    ->numeric(locale: 'nl')\r\n                    ->sortable()\r\n                    ->summarize(Sum::make()->numeric(locale: 'nl')->prefix('Rp ')->label('Total-')),\r\n\r\n                TextColumn::make('mutation_type')\r\n                    ->label('mutation')\r\n                    ->sortable()\r\n                    ->searchable(isIndividual: true),\r\n                TextColumn::make('branch.name')\r\n                    ->sortable()\r\n                    ->searchable(isIndividual: true),\r\n                TextColumn::make('porder.status')\r\n                ->label('Purchase status')\r\n                ->badge()\r\n                    ->color(fn(string $state): string => match ($state) {\r\n                        'new' => 'info',\r\n                        'processing' => 'warning',\r\n                        'shipped' => 'gray',\r\n                        'delivered' => 'success',\r\n                        'canceled' => 'danger'\r\n                    })\r\n                    ->icon(fn(string $state): string => match ($state) {\r\n                        'new' => 'heroicon-m-sparkles',\r\n                        'processing' => 'heroicon-m-arrow-path',\r\n                        'shipped' => 'heroicon-m-truck',\r\n                        'delivered' => 'heroicon-m-check-badge',\r\n                        'canceled' => 'heroicon-m-x-circle'\r\n                    })\r\n                    ->sortable()\r\n                    ->searchable(isIndividual: true),\r\n                TextColumn::make('notes')\r\n                    ->sortable(),\r\n                // TextColumn::make('stock_before')\r\n                //     ->numeric()\r\n                //     ->sortable(),\r\n                // TextColumn::make('stock_after')\r\n                //     ->numeric()\r\n                //     ->sortable(),\r\n                TextColumn::make('created_at')\r\n                    ->dateTime()\r\n                    ->sortable()\r\n                    ->toggleable(isToggledHiddenByDefault: true),\r\n                TextColumn::make('updated_at')\r\n                    ->dateTime()\r\n                    ->sortable()\r\n                    ->toggleable(isToggledHiddenByDefault: true),\r\n\r\n                TextColumn::make('order.code_tr')\r\n                    ->sortable()\r\n                    ->searchable(),\r\n                TextColumn::make('porder.code_tr')\r\n                    ->sortable()\r\n                    ->searchable(),\r\n                TextColumn::make('adjItem.code_tr')\r\n                    ->sortable()\r\n                    ->searchable(),\r\n                TextColumn::make('trStkOut.code_tr')\r\n                    ->sortable()\r\n                    ->searchable(),\r\n                TextColumn::make('trStkIn.code_tr')\r\n                    ->sortable()\r\n                    ->searchable(),\r\n\r\n            ])->defaultSort('created_at', 'desc')\r\n            ->groups([\r\n                Tables\\Grouping\\Group::make('created_at')\r\n                    ->label('Date')\r\n                    ->date()\r\n                    ->collapsible(),\r\n                Tables\\Grouping\\Group::make('order.status')\r\n                    ->label('Status')\r\n                    ->collapsible(),\r\n            ])\r\n            ->filters([\r\n                Filter::make('created_at')\r\n                    ->form([\r\n                        DatePicker::make('created_at_from'),\r\n                        DatePicker::make('created_at_until'),\r\n                    ])\r\n                    ->query(function (Builder $query, array $data): Builder {\r\n                        return $query\r\n                            ->when(\r\n                                $data['created_at_from'],\r\n                                fn(Builder $query, $date): Builder => $query->whereDate('created_at', '>=', $date),\r\n                            )\r\n                            ->when( \r\n                                $data['created_at_until'],\r\n                                fn(Builder $query, $date): Builder => $query->whereDate('created_at', '<=', $date),\r\n                            );\r\n                    }),\r\n            ])\r\n            ->actions([\r\n                // Tables\\Actions\\EditAction::make(),\r\n            ])\r\n            ->bulkActions([\r\n                // Tables\\Actions\\BulkActionGroup::make([\r\n                //     Tables\\Actions\\DeleteBulkAction::make(),\r\n                // ]),\r\n            ])\r\n            ->query(function (OrderItem $query) {\r\n                if (Auth::user()->id != 0) {\r\n                    return $query->where('branch_id', Auth::user()->branch_id);\r\n                } else {\r\n                    return $query\r\n                    ->leftJoin('orders','orderitems.id','=','orders.id')\r\n                    ->leftJoin('porders','orderitems.id','=','porders.id');\r\n                };\r\n            });\r\n    }\r\n\r\n    public static function getRelations(): array\r\n    {\r\n        return [\r\n            //\r\n        ];\r\n    }\r\n\r\n    public static function getPages(): array\r\n    {\r\n        return [\r\n            'index' => Pages\\ListOrderItems::route('/'),\r\n            // 'create' => Pages\\CreateOrderItem::route('/create'),\r\n            // 'edit' => Pages\\EditOrderItem::route('/{record}/edit'),\r\n        ];\r\n    }\r\n}\r\n"
        }
    ]
}