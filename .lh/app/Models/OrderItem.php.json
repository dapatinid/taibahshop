{
    "sourceFile": "app/Models/OrderItem.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1733747763612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1734019486535,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,12 @@\n     public function porder()\n     {\n         return $this->belongsTo(Porder::class);\n     }\n+    public function proItem()\n+    {\n+        return $this->belongsTo(Production::class);\n+    }\n     public function adjItem()\n     {\n         return $this->belongsTo(AdjItem::class);\n     }\n"
                },
                {
                    "date": 1734024408390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n     use HasFactory;\n     protected $fillable = [\n         'porder_id',\n         'order_id',\n+        'production_id',\n         'adj_item_id',\n         'product_id',\n         'unit_name',\n         'contain',\n"
                },
                {
                    "date": 1734028499418,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,9 +36,9 @@\n     public function porder()\n     {\n         return $this->belongsTo(Porder::class);\n     }\n-    public function proItem()\n+    public function production()\n     {\n         return $this->belongsTo(Production::class);\n     }\n     public function adjItem()\n"
                },
                {
                    "date": 1735296536210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,12 +3,13 @@\n namespace App\\Models;\n \n use Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\n use Illuminate\\Database\\Eloquent\\Model;\n+use Illuminate\\Database\\Eloquent\\SoftDeletes;\n \n class OrderItem extends Model\n {\n-    use HasFactory;\n+    use HasFactory, SoftDeletes;\n     protected $fillable = [\n         'porder_id',\n         'order_id',\n         'production_id',\n"
                },
                {
                    "date": 1735403206908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,8 +26,11 @@\n         'notes',\n         'mutation_type',\n         'stock_before',\n         'stock_after',\n+        'created_by',\n+        'updated_by',\n+        'updated_at',\n         'branch_id',\n     ];\n \n     public function order()\n"
                }
            ],
            "date": 1733747763612,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Models;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\HasFactory;\nuse Illuminate\\Database\\Eloquent\\Model;\n\nclass OrderItem extends Model\n{\n    use HasFactory;\n    protected $fillable = [\n        'porder_id',\n        'order_id',\n        'adj_item_id',\n        'product_id',\n        'unit_name',\n        'contain',\n        'p_quantity',\n        'quantity',\n        'p_unit_amount',\n        'unit_amount',\n        'p_total_amount',\n        'total_amount',\n        'notes',\n        'mutation_type',\n        'stock_before',\n        'stock_after',\n        'branch_id',\n    ];\n\n    public function order()\n    {\n        return $this->belongsTo(Order::class);\n    }\n    public function porder()\n    {\n        return $this->belongsTo(Porder::class);\n    }\n    public function adjItem()\n    {\n        return $this->belongsTo(AdjItem::class);\n    }\n    public function branch()\n    {\n        return $this->belongsTo(Branch::class);\n    }\n    public function trStkOut()\n    {\n        return $this->belongsTo(TrStkOut::class);\n    }\n    public function trStkIn()\n    {\n        return $this->belongsTo(TrStkIn::class);\n    }\n\n    public function product()\n    {\n        return $this->belongsTo(Product::class);\n    }\n}\n"
        }
    ]
}