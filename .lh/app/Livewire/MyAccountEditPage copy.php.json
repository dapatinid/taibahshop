{
    "sourceFile": "app/Livewire/MyAccountEditPage copy.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1735453183516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1735453183516,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Livewire;\n\nuse App\\Models\\User;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Facades\\Storage;\nuse Jantinnerezo\\LivewireAlert\\LivewireAlert;\nuse Livewire\\Attributes\\Url;\nuse Livewire\\Attributes\\Validate;\nuse Livewire\\Component;\nuse Livewire\\WithFileUploads;\nuse Vermaysha\\Wilayah\\Models\\City;\nuse Vermaysha\\Wilayah\\Models\\District;\nuse Vermaysha\\Wilayah\\Models\\Province;\nuse Vermaysha\\Wilayah\\Models\\Village;\n\nclass MyAccountPage extends Component\n{\n    use LivewireAlert, WithFileUploads;\n\n    #[Validate('image|max:1024')] // 1MB Max\n    public $photo;\n\n    #[Url()]\n    public $name;\n    #[Url()]\n    public $phone;\n    #[Url()]\n    public $email;\n    public $password = '';\n\n    public $state;\n    public $city;\n    public $district;\n    public $village;\n    public $street_address;\n    public $zip_code;\n\n    public function mount()\n    {\n\n        $this->name = User::where('id', auth()->user()->id)->value('name');\n        $this->phone = User::where('id', auth()->user()->id)->value('phone');\n        $this->email = User::where('id', auth()->user()->id)->value('email');\n\n        $this->street_address = User::where('id', auth()->user()->id)->value('street_address');\n        $this->zip_code = User::where('id', auth()->user()->id)->value('zip_code');\n\n        if (auth()->user()->village != '') {\n            $this->village = auth()->user()->village;\n        }\n        if (auth()->user()->district != '') {\n            $this->district = auth()->user()->district;\n        }\n        if (auth()->user()->city != '') {\n            $this->city = auth()->user()->city;\n        }\n        if (auth()->user()->state != '') {\n            $this->state = auth()->user()->state;\n        }\n    }\n\n    // update user\n    public function updateMyAccount()\n    {\n        if (auth()->user()->image) {\n            Storage::disk('public')->delete(auth()->user()->image);\n        };\n\n        $nameImg = md5($this->photo . microtime()) . '.' . $this->photo->extension();\n        $this->photo->storeAs('public/users/avatar', $nameImg);\n        $this->validate([\n            'name' => 'required|max:255',\n            'phone' => 'required|max:255',\n            'state' => 'required|max:255',\n            'city' => 'required|max:255',\n            'district' => 'required|max:255',\n            'village' => 'required|max:255',\n            'street_address' => 'required|max:255',\n        ]);\n\n        $data = User::where('id', auth()->user()->id);\n        if ($this->password != '') {\n            $validate = [\n                'image' => 'users/avatar/' . $nameImg,\n                'name' => $this->name,\n                'phone' => $this->phone,\n                'password' => Hash::make($this->password),\n                'state' => $this->state,\n                'city' => $this->city,\n                'district' => $this->district,\n                'village' => $this->village,\n                'street_address' => $this->street_address,\n                'zip_code' => $this->zip_code,\n            ];\n        } else {\n            $validate = [\n                'image' => 'users/avatar/' . $nameImg,\n                'name' => $this->name,\n                'phone' => $this->phone,\n                'state' => $this->state,\n                'city' => $this->city,\n                'district' => $this->district,\n                'village' => $this->village,\n                'street_address' => $this->street_address,\n                'zip_code' => $this->zip_code,\n            ];\n        }\n\n        $data->update($validate);\n\n        $this->alert('success', 'Data Updated!', [\n            'position' => 'top',\n            'timer' => 3000,\n            'toast' => true,\n        ]);\n    }\n\n    public function changeState()\n    {\n        $this->city = \"\";\n        $this->district = \"\";\n        $this->village = \"\";\n    }\n    public function changeCity()\n    {\n        $this->district = \"\";\n        $this->village = \"\";\n    }\n    public function changeDistrict()\n    {\n        $this->village = \"\";\n    }\n\n    public function render()\n    {\n        $states = Province::all();\n        $cities = City::all()->where('province_code', $this->state)->sortByDesc('name');\n        $districts = District::all()->where('city_code', $this->city)->sortBy('name');\n        $villages = Village::all()->where('district_code', $this->district)->sortBy('name');\n        $kab = City::all()->sortByDesc('name');\n        $kec = District::all()->sortBy('name');\n        $desa = Village::all()->sortBy('name');\n\n        $users = User::all();\n\n        return view('livewire.my-account-edit-page', [\n            'states' => $states,\n            'cities' => $cities,\n            'districts' => $districts,\n            'villages' => $villages,\n            'users' => $users,\n            'kab' => $kab,\n            'kec' => $kec,\n            'desa' => $desa,\n        ]);\n    }\n}\n"
        }
    ]
}