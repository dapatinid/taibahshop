{
    "sourceFile": "database/factories/UserFactory.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1735057910036,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1735058317376,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,8 @@\n             'email' => fake()->unique()->safeEmail(),\n             // 'email_verified_at' => now(),\n             'password' => static::$password ??= Hash::make('password'),\n             'remember_token' => Str::random(10),\n-            'created_oleh' => 1,\n-            'updated_oleh' => 1,\n-            'branch_id' => 1,\n         ];\n     }\n \n     /**\n"
                },
                {
                    "date": 1735058411887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,47 @@\n+<?php\n+\n+namespace Database\\Factories;\n+\n+use Illuminate\\Database\\Eloquent\\Factories\\Factory;\n+use Illuminate\\Support\\Facades\\Hash;\n+use Illuminate\\Support\\Str;\n+\n+/**\n+ * @extends \\Illuminate\\Database\\Eloquent\\Factories\\Factory<\\App\\Models\\User>\n+ */\n+class UserFactory extends Factory\n+{\n+    /**\n+     * The current password being used by the factory.\n+     */\n+    protected static ?string $password;\n+\n+    /**\n+     * Define the model's default state.\n+     *\n+     * @return array<string, mixed>\n+     */\n+    public function definition(): array\n+    {\n+        return [\n+            'name' => fake()->name(),\n+            'email' => fake()->unique()->safeEmail(),\n+            // 'email_verified_at' => now(),\n+            'password' => static::$password ??= Hash::make('password'),\n+            'remember_token' => Str::random(10),\n+            'created_oleh' => 1,\n+            'updated_oleh' => 1,\n+            'branch_id' => 1,\n+        ];\n+    }\n+\n+    /**\n+     * Indicate that the model's email address should be unverified.\n+     */\n+    public function unverified(): static\n+    {\n+        return $this->state(fn(array $attributes) => [\n+            'email_verified_at' => null,\n+        ]);\n+    }\n+}\n"
                },
                {
                    "date": 1735058633106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,11 +28,8 @@\n             'email' => fake()->unique()->safeEmail(),\n             // 'email_verified_at' => now(),\n             'password' => static::$password ??= Hash::make('password'),\n             'remember_token' => Str::random(10),\n-            'created_oleh' => 1,\n-            'updated_oleh' => 1,\n-            'branch_id' => 1,\n         ];\n     }\n \n     /**\n"
                },
                {
                    "date": 1735064457531,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,9 +26,9 @@\n         return [\n             'name' => fake()->name(),\n             'email' => fake()->unique()->safeEmail(),\n             // 'email_verified_at' => now(),\n-            'password' => static::$password ??= Hash::make('password'),\n+            'password' => static::$password ??= Hash::make('password2121'),\n             'remember_token' => Str::random(10),\n         ];\n     }\n \n@@ -41,48 +41,4 @@\n             'email_verified_at' => null,\n         ]);\n     }\n }\n-<?php\n-\n-namespace Database\\Factories;\n-\n-use Illuminate\\Database\\Eloquent\\Factories\\Factory;\n-use Illuminate\\Support\\Facades\\Hash;\n-use Illuminate\\Support\\Str;\n-\n-/**\n- * @extends \\Illuminate\\Database\\Eloquent\\Factories\\Factory<\\App\\Models\\User>\n- */\n-class UserFactory extends Factory\n-{\n-    /**\n-     * The current password being used by the factory.\n-     */\n-    protected static ?string $password;\n-\n-    /**\n-     * Define the model's default state.\n-     *\n-     * @return array<string, mixed>\n-     */\n-    public function definition(): array\n-    {\n-        return [\n-            'name' => fake()->name(),\n-            'email' => fake()->unique()->safeEmail(),\n-            // 'email_verified_at' => now(),\n-            'password' => static::$password ??= Hash::make('password'),\n-            'remember_token' => Str::random(10),\n-        ];\n-    }\n-\n-    /**\n-     * Indicate that the model's email address should be unverified.\n-     */\n-    public function unverified(): static\n-    {\n-        return $this->state(fn(array $attributes) => [\n-            'email_verified_at' => null,\n-        ]);\n-    }\n-}\n"
                },
                {
                    "date": 1735991643408,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,8 +28,10 @@\n             'email' => fake()->unique()->safeEmail(),\n             // 'email_verified_at' => now(),\n             'password' => static::$password ??= Hash::make('password2121'),\n             'remember_token' => Str::random(10),\n+            'created_by' => 1,\n+            'updated_by' => 1,\n         ];\n     }\n \n     /**\n"
                }
            ],
            "date": 1735057910036,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace Database\\Factories;\n\nuse Illuminate\\Database\\Eloquent\\Factories\\Factory;\nuse Illuminate\\Support\\Facades\\Hash;\nuse Illuminate\\Support\\Str;\n\n/**\n * @extends \\Illuminate\\Database\\Eloquent\\Factories\\Factory<\\App\\Models\\User>\n */\nclass UserFactory extends Factory\n{\n    /**\n     * The current password being used by the factory.\n     */\n    protected static ?string $password;\n\n    /**\n     * Define the model's default state.\n     *\n     * @return array<string, mixed>\n     */\n    public function definition(): array\n    {\n        return [\n            'name' => fake()->name(),\n            'email' => fake()->unique()->safeEmail(),\n            // 'email_verified_at' => now(),\n            'password' => static::$password ??= Hash::make('password'),\n            'remember_token' => Str::random(10),\n            'created_oleh' => 1,\n            'updated_oleh' => 1,\n            'branch_id' => 1,\n        ];\n    }\n\n    /**\n     * Indicate that the model's email address should be unverified.\n     */\n    public function unverified(): static\n    {\n        return $this->state(fn(array $attributes) => [\n            'email_verified_at' => null,\n        ]);\n    }\n}\n"
        }
    ]
}