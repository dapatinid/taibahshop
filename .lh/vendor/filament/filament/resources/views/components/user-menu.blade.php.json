{
    "sourceFile": "vendor/filament/filament/resources/views/components/user-menu.blade.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1733933541449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1733933541449,
            "name": "Commit-0",
            "content": "@php\n    $user = filament()->auth()->user();\n    $userid = filament()->auth()->user()->id;\n    $email = filament()->auth()->user()->email;\n    $branch = filament()->auth()->user()->branch_id;\n    $branchname = \\App\\Models\\Branch::where('id', $branch)->value('name');\n\n    $items = filament()->getUserMenuItems();\n\n    $profileItem = $items['profile'] ?? $items['account'] ?? null;\n    $profileItemUrl = $profileItem?->getUrl();\n    $profilePage = filament()->getProfilePage();\n    $hasProfileItem = filament()->hasProfile() || filled($profileItemUrl);\n\n    $logoutItem = $items['logout'] ?? null;\n\n    $items = \\Illuminate\\Support\\Arr::except($items, ['account', 'logout', 'profile']);\n@endphp\n\n{{ \\Filament\\Support\\Facades\\FilamentView::renderHook(\\Filament\\View\\PanelsRenderHook::USER_MENU_BEFORE) }}\n\n<x-filament::dropdown\n    placement=\"bottom-end\"\n    teleport\n    :attributes=\"\n        \\Filament\\Support\\prepare_inherited_attributes($attributes)\n            ->class(['fi-user-menu'])\n    \"\n>\n    <x-slot name=\"trigger\">\n        <button\n            aria-label=\"{{ __('filament-panels::layout.actions.open_user_menu.label') }}\"\n            type=\"button\"\n            class=\"shrink-0\"\n        >\n            <x-filament-panels::avatar.user :user=\"$user\" />\n        </button>\n    </x-slot>\n\n    @if ($profileItem?->isVisible() ?? true)\n        {{ \\Filament\\Support\\Facades\\FilamentView::renderHook(\\Filament\\View\\PanelsRenderHook::USER_MENU_PROFILE_BEFORE) }}\n\n        @if ($hasProfileItem)\n            <x-filament::dropdown.list>\n                <x-filament::dropdown.list.item\n                    :color=\"$profileItem?->getColor()\"\n                    :icon=\"$profileItem?->getIcon() ?? \\Filament\\Support\\Facades\\FilamentIcon::resolve('panels::user-menu.profile-item') ?? 'heroicon-m-user-circle'\"\n                    :href=\"$profileItemUrl ?? filament()->getProfileUrl()\"\n                    :target=\"($profileItem?->shouldOpenUrlInNewTab() ?? false) ? '_blank' : null\"\n                    tag=\"a\"\n                >\n                    {{ $profileItem?->getLabel() ?? ($profilePage ? $profilePage::getLabel() : null) ?? filament()->getUserName($user) }} | {{ $profileItem?->getLabel() ?? $branchname }}\n                </x-filament::dropdown.list.item>\n            </x-filament::dropdown.list>\n        @else\n            <x-filament::dropdown.header\n                :color=\"$profileItem?->getColor()\"\n                :icon=\"$profileItem?->getIcon() ?? \\Filament\\Support\\Facades\\FilamentIcon::resolve('panels::user-menu.profile-item') ?? 'heroicon-m-user-circle'\"\n            >\n                {{ $profileItem?->getLabel() ?? filament()->getUserName($user) }} | {{ $profileItem?->getLabel() ?? $branchname }}\n            </x-filament::dropdown.header>\n        @endif\n\n        {{ \\Filament\\Support\\Facades\\FilamentView::renderHook(\\Filament\\View\\PanelsRenderHook::USER_MENU_PROFILE_AFTER) }}\n    @endif\n\n    <a href=\"/my-account\" ><x-filament::dropdown.list class=\"text-center text-sm scale-75\">\n        {{ $profileItem?->getLabel() ?? $email }} | {{ $profileItem?->getLabel() ?? $branch }}\n    </x-filament::dropdown.list></a>\n    \n    <a href=\"/\" ><x-filament::dropdown.list class=\"text-center m-1 hover:bg-yellow-500 hover:rounded-md hover:m-1\">\n        <button>Go to Shop</button>\n    </x-filament::dropdown.list></a>\n\n    <a onclick=\"toggle_full_screen()\"  ><x-filament::dropdown.list class=\"fullscreen text-center m-1 hover:bg-yellow-500 hover:rounded-md hover:m-1\">\n        <button>Fullscreen</button>\n    </x-filament::dropdown.list></a>\n\n    <script language=\"JavaScript\">\n     function toggle_full_screen()\n        {\n            if ((document.fullScreenElement && document.fullScreenElement !== null) || (!document.mozFullScreen && !document.webkitIsFullScreen))\n            {\n                if (document.documentElement.requestFullScreen){\n                    document.documentElement.requestFullScreen();\n                }\n                else if (document.documentElement.mozRequestFullScreen){ /* Firefox */\n                    document.documentElement.mozRequestFullScreen();\n                }\n                else if (document.documentElement.webkitRequestFullScreen){   /* Chrome, Safari & Opera */\n                    document.documentElement.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);\n                }\n                else if (document.msRequestFullscreen){ /* IE/Edge */\n                    document.documentElement.msRequestFullscreen();\n                }\n            }\n            else\n            {\n                if (document.cancelFullScreen){\n                    document.cancelFullScreen();\n                }\n                else if (document.mozCancelFullScreen){ /* Firefox */\n                    document.mozCancelFullScreen();\n                }\n                else if (document.webkitCancelFullScreen){   /* Chrome, Safari and Opera */\n                    document.webkitCancelFullScreen();\n                }\n                else if (document.msExitFullscreen){ /* IE/Edge */\n                    document.msExitFullscreen();\n                }\n            }\n        }\n    </script>\n\n\n    @if (filament()->hasDarkMode() && (! filament()->hasDarkModeForced()))\n        <x-filament::dropdown.list>\n            <x-filament-panels::theme-switcher />\n        </x-filament::dropdown.list>\n    @endif\n\n    <x-filament::dropdown.list>\n        @foreach ($items as $key => $item)\n            @php\n                $itemPostAction = $item->getPostAction();\n            @endphp\n\n            <x-filament::dropdown.list.item\n                :action=\"$itemPostAction\"\n                :color=\"$item->getColor()\"\n                :href=\"$item->getUrl()\"\n                :icon=\"$item->getIcon()\"\n                :method=\"filled($itemPostAction) ? 'post' : null\"\n                :tag=\"filled($itemPostAction) ? 'form' : 'a'\"\n                :target=\"$item->shouldOpenUrlInNewTab() ? '_blank' : null\"\n            >\n                {{ $item->getLabel() }}\n            </x-filament::dropdown.list.item>\n        @endforeach\n\n        <x-filament::dropdown.list.item\n            :action=\"$logoutItem?->getUrl() ?? filament()->getLogoutUrl()\"\n            :color=\"$logoutItem?->getColor()\"\n            :icon=\"$logoutItem?->getIcon() ?? \\Filament\\Support\\Facades\\FilamentIcon::resolve('panels::user-menu.logout-button') ?? 'heroicon-m-arrow-left-on-rectangle'\"\n            method=\"post\"\n            tag=\"form\"\n        >\n            {{ $logoutItem?->getLabel() ?? __('filament-panels::layout.actions.logout.label') }}\n        </x-filament::dropdown.list.item>\n    </x-filament::dropdown.list>\n</x-filament::dropdown>\n\n{{ \\Filament\\Support\\Facades\\FilamentView::renderHook(\\Filament\\View\\PanelsRenderHook::USER_MENU_AFTER) }}\n"
        }
    ]
}